{"version":3,"sources":["axios.create.js","Layout/Header.js","components/Login.js","Layout/Footer.js","components/PageInfo.js","components/Home.js","components/Register.js","components/Profile.js","components/Room.js","components/Roomselect.js","components/Roomdetail.js","components/Payment.js","components/Gp_room.js","components/Pay1.js","components/Sandbox.js","components/Myroom.js","components/Contact.js","dashborad/Menubar.js","dashborad/Userdata.js","dashborad/Roomdata.js","dashborad/RoomList.js","dashborad/TypeList.js","dashborad/Employeelist.js","dashborad/Walkin1.js","dashborad/Walkin2.js","dashborad/Walkin3.js","dashborad/Walkin4.js","dashborad/Walkin5.js","dashborad/Walkin.js","dashborad/InfoList.js","dashborad/Dashboard.js","index.js","image/room1.jpg","image/img3.png","image/img5.png"],"names":["instance","Axios","create","baseURL","timeout","headers","X-Custom-Header","drawerWidth","MenuAppBar","props","_React$useState","React","useState","_React$useState2","_slicedToArray","auth","setAuth","_React$useState3","_React$useState4","anchorEl","setAnchorEl","handleClose","useEffect","token","localStorage","getItem","post","Authorization","concat","then","response","data","status","handlelogout","event","removeItem","window","location","preventDefault","_React$useState5","_React$useState6","mobileOpen","setMobileOpen","handleDrawerToggle","drawer","createElement","Toolbar","Divider","List","ListItemButton","to","component","RouterLink","ListItemIcon","HomeIcon","ListItemText","primary","BedroomChildIcon","ContactsIcon","LoginIcon","AccountCircle","RoomPreferencesIcon","LogoutIcon","onClick","container","undefined","document","body","Box","sx","flexGrow","AppBar","position","elevation","style","background","IconButton","color","aria-label","edge","mr","display","sm","MenuIcon","Typography","variant","MenuItem","xs","size","aria-controls","aria-haspopup","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","width","flexShrink","Drawer","ModalProps","& .MuiDrawer-paper","boxSizing","theme","createTheme","SignIn","title","navigate","useNavigate","gapi","load","client","init","clientId","screen","ThemeProvider","backgroundColor","Navbar","Container","maxWidth","CssBaseline","marginTop","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","onSubmit","FormData","JsonData","email","get","password","setItem","Swal","fire","icon","showConfirmButton","setTimeout","confirmButtonText","noValidate","mt","TextField","margin","required","fullWidth","label","name","autoComplete","autoFocus","type","Button","mb","Grid","item","Link","Footer","p","spacing","gutterBottom","Album","_useState","_useState2","rows","setrows","_useState3","_useState4","setOpen","_useState5","_useState6","selectedCard","setSelectedCard","py","justifyContent","map","card","key","id_info","md","Card","height","CardMedia","image","alt","CardContent","heading","CardActions","handleViewClick","borderRadius","Dialog","aria-describedby","Fragment","DialogTitle","DialogContent","details","styles","paperContainer","backgroundImage","Image","backgroundPosition","text","result","isConfirmed","pt","pb","align","paragraph","Stack","direction","startIcon","CalendarMonthIcon","&:hover","Infopage","SignUp","formErrors","setFormErrors","lastname","tel","errors","firstName","lastName","Object","keys","length","error","helperText","backgroundSize","Profile","stay","setStay","decoded","setid","setIdcard","setName","setLastname","setEmail","setTel","setBackupidcard","setBackupname","setBackuplastname","setBackupemail","setBackuptel","idcard","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","backupidcard","_useState17","_useState18","backupname","_useState19","_useState20","backuplastname","_useState21","_useState22","backupemail","_useState23","_useState24","backuptel","boxShadow","ml","InputProps","readOnly","onChange","e","target","value","ManageAccountsIcon","update_user","put","Clickupdate","sessionStorage","clear","row","Room1","textAlign","nameroom","id_Type","path","Superior","dayjs","Date","selectedDate","setSelectedDate","selectedDateout","setSelectedDateout","roomname","setroomname","tomorrow","setDate","getDate","Data","LocalizationProvider","dateAdapter","AdapterDayjs","adapterLocale","DemoItem","MobileDatePicker","minDate","date","test","pr","SearchIcon","checkin","checkout","id_room","name_room","detill_room","disableSpacing","temp","param","price","check1","Roomdetail","dayOfWeekin","getDay","dayOfWeekout","days","T1","count","dataJson","roomkey","CardActionArea","level","getMonth","getFullYear","generatePayload","require","LoadingScreen","CircularProgress","Payment","phoneNumber","amount","parseInt","qrCode","setqrCode","isLoading","setIsLoading","timer","console","log","QRCode","RandomNumberGenerator","randomNumber","setRandomNumber","dataFetchedRef","useRef","current","newNumber","Math","floor","random","toString","padStart","password_room","price_total","status_room","res","insert","steps","stepContentMap","0","1","2","Gpass","Pay","activeStep","setActiveStep","Paper","my","Stepper","Step","StepLabel","style_","top","left","transform","id_book","checkin_room","checkout_room","Modal","Buttonname","Icon","ErrorIcon","CheckCircleIcon","px","booking","fontWeight","price_room","useStyles","makeStyles","form","padding","& .MuiTextField-root","& .MuiButton-root","classes","className","multiline","mainListItems","RecentActorsIcon","CollectionsBookmarkIcon","secondaryListItems","AssignmentIcon","loginprofile","adminconsole","DirectionsWalkIcon","PeopleIcon","InfoIcon","Userdata","Table","TableHead","TableRow","TableCell","TableBody","Roomdata","selectedRoom","setSelectedRoom","searchTerm","setSearchTerm","settype","htmlFor","marginRight","room","endAdornment","InputAdornment","filter","room_name","lowerSearchTerm","toLowerCase","id_booking","includes","email_user","format","showCancelButton","confirmButtonColor","cancelButtonColor","status_room_update","addon","setaddon","ID_Room","setID_Room","Room_Name","setRoom_Name","Detill_Room","setDetill_Room","Price_Room","setPrice_Room","ID_Type","setID_Type","Clickaddroom","id_type","detill","endIcon","DeleteIcon","cancelButtonText","delete","Switch","checked","light_status","disabled","update_room","Type_Name","setType_Name","Detill_Type","setDetill_Type","Path_Type","setPath_Type","Clickadd","setPassword","id_","idcard_","name_","lastname_","email_","tel_","selectedType","setSelectedType","show","setSelectedshow","handleClick","FormControl","minWidth","Select","setError","data_set","JSON","stringify","data_user","parse","Wlakin1","Walkin2","Walkin3","3","Walkin4","4","Walkin5","atId","useParams","ID_Info","setID_Info","setheading","Detill","setDetill","styled","MuiAppBar","shouldForwardProp","prop","_ref","_objectSpread","zIndex","transition","transitions","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","MuiDrawer","_ref2","whiteSpace","_defineProperty","overflowX","breakpoints","up","mdTheme","DashboardContent","postId","toggleDrawer","Roomrdata","RoomList","TypeList","Employeelist","5","Walkin","6","InfoList","noWrap","ChevronLeftIcon","palette","mode","grey","overflow","Dashboard","ReactDOM","createRoot","getElementById","render","StrictMode","Router","Routes","Route","element","Home","Login","Register","Room","Roomselect","Pay1","Sandbox","Myroom","Contact","Main","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.85fdad03.chunk.js","sourcesContent":["import Axios from \"axios\";\n\n// const instance = Axios.create({\n//   baseURL: \"http://localhost:3001\",\n//   timeout: 1000,\n//   headers: { \"X-Custom-Header\": \"foobar\" },\n// });\nconst instance = Axios.create({\n    baseURL: 'http://20.189.116.250:3001',\n    timeout: 1000,\n    headers: {'X-Custom-Header': 'foobar'\n\n  }\n  });\n\n// const instance = Axios.create({\n//   baseURL: 'https://dull-puce-parrot-toga.cyclic.app/',\n//   timeout: 1000,\n//   headers: {'X-Custom-Header': 'foobar'\n\n// }\nexport default instance;\n","import React, { useEffect } from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport Divider from \"@mui/material/Divider\";\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport BedroomChildIcon from \"@mui/icons-material/BedroomChild\";\nimport ContactsIcon from \"@mui/icons-material/Contacts\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport RoomPreferencesIcon from \"@mui/icons-material/RoomPreferences\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport instance from \"../axios.create\";\n\nconst drawerWidth = 240;\n\nexport default function MenuAppBar(props) {\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    instance\n      .post(\n        \"authen\",\n        {},\n        {\n          headers: {\n            Authorization: `Basic ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.status === \"ok\") {\n          setAuth(true);\n        } else {\n          setAuth(false);\n        }\n      });\n  }, []);\n  const handlelogout = (event) => {\n    localStorage.removeItem(\"token\");\n    window.location = \"/home\";\n    event.preventDefault();\n  };\n\n  const { window } = props;\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <Toolbar />\n      <Divider />\n      <List>\n        <ListItemButton to=\"/home\" component={RouterLink}>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Home\" />\n        </ListItemButton>\n        <ListItemButton to=\"/room\" component={RouterLink}>\n          <ListItemIcon>\n            <BedroomChildIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Room\" />\n        </ListItemButton>\n        <ListItemButton to=\"/contact\" component={RouterLink}>\n          <ListItemIcon>\n            <ContactsIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Contact\" />\n        </ListItemButton>\n      </List>\n      <Divider />\n      {!auth && (\n        <ListItemButton to=\"/login\" component={RouterLink}>\n          <ListItemIcon>\n            <LoginIcon />\n          </ListItemIcon>\n          <ListItemText to=\"/login\" primary=\"Login\" />\n        </ListItemButton>\n      )}\n      {auth && (\n        <List>\n          <ListItemButton to=\"/profile\" component={RouterLink}>\n            <ListItemIcon>\n              <AccountCircle />\n            </ListItemIcon>\n            <ListItemText primary=\"Profile\" />\n          </ListItemButton>\n          <ListItemButton to=\"/myroom\" component={RouterLink}>\n            <ListItemIcon>\n              <RoomPreferencesIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"My Room\" />\n          </ListItemButton>\n          <ListItemButton to=\"/home\" component={RouterLink}>\n            <ListItemIcon>\n              <LogoutIcon />\n            </ListItemIcon>\n            <ListItemText onClick={handlelogout} primary=\"Log Out\" />\n          </ListItemButton>\n        </List>\n      )}\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar\n        position=\"static\"\n        elevation={0}\n        style={{ background: \"transparent\" }}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { sm: \"none\" } }}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            \n          </Typography>\n\n          <MenuItem\n            component={RouterLink}\n            to=\"/home\"\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\n          >\n            Home\n          </MenuItem>\n          <MenuItem\n            component={RouterLink}\n            to=\"/room\"\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\n          >\n            Room\n          </MenuItem>\n          <MenuItem\n            component={RouterLink}\n            to=\"/contact\"\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\n          >\n            Contact\n          </MenuItem>\n          {!auth && (\n            <MenuItem\n              component={RouterLink}\n              to=\"/login\"\n              sx={{ display: { xs: \"none\", sm: \"block\" } }}\n            >\n              Login\n            </MenuItem>\n          )}\n\n          {auth && (\n            <div>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n                sx={{ display: { xs: \"none\", sm: \"block\" } }}\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem\n                  component={RouterLink}\n                  to=\"/profile\"\n                  onClick={handleClose}\n                >\n                  Profile\n                </MenuItem>\n                <MenuItem component={RouterLink} to=\"/myroom\">\n                  My room\n                </MenuItem>\n                <MenuItem component={RouterLink} to=\"/\" onClick={handlelogout}>\n                  Logout\n                </MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n      <Box\n        component=\"nav\"\n        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\n        aria-label=\"mailbox folders\"\n      >\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n          sx={{\n            display: { xs: \"block\", sm: \"none\" },\n            \"& .MuiDrawer-paper\": {\n              boxSizing: \"border-box\",\n              width: drawerWidth,\n            },\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Box>\n    </Box>\n  );\n}\n","import Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n// import { GoogleLogin } from \"react-google-login\";\nimport { gapi } from \"gapi-script\";\nimport React, { useEffect } from \"react\";\nimport Navbar from \"../Layout/Header\";\n// import Footer from \"../Layout/Footer\";\nimport Swal from \"sweetalert2\";\nimport instance from \"../axios.create\";\nimport { useNavigate  } from \"react-router-dom\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst theme = createTheme();\n\nexport default function SignIn() {\n  document.title = 'Login';\n\n  // const [name, setName] = useState('');\n  const navigate = useNavigate ();\n\n  const clientId =\n    \"581350385120-2kgkabehouvu40b0d1han5ct032ghr42.apps.googleusercontent.com\";\n  useEffect(() => {\n    const initClient = () => {\n      gapi.client.init({\n        clientId: clientId,\n        screen: \"\",\n      });\n    };\n    gapi.load(\"client:auth2\", initClient);\n  }, []);\n\n  // const onSuccess = (res) => {\n  //   // console.log('success', res);\n  // };\n  // const onFailure = (res) => {\n  //   // console.log('failed', res);\n  // };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const JsonData = {\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n    };\n\n    instance.post(\"login\", JsonData).then((response) => {\n      if (response.data.status === \"ok\") {\n        localStorage.setItem(\"token\", response.data.token);\n\n        Swal.fire({\n          title: \"Login success\",\n          icon: \"success\",\n          showConfirmButton: false,\n        });\n        // window.location = \"/home\";\n        setTimeout(function () {\n          navigate('/home');\n        }, 1000);\n      } else if (response.data.status === \"admin\") {\n        localStorage.setItem(\"token\", response.data.token);\n\n        Swal.fire({\n          title: \"Login Admin Success\",\n          icon: \"success\",\n          showConfirmButton: false,\n        });\n\n        // window.location = \"/home\";\n        setTimeout(function () {\n          navigate(\"/dashboard/userdata/0\");\n        }, 1000);\n      } else {\n        Swal.fire({\n          title: \"Login failed\",\n          icon: \"error\",\n          confirmButtonText: \"OK\",\n        });\n      }\n    });\n\n    // fetch(\"http://localhost:3001/login\", {\n    //   method: \"POST\", // or 'PUT'\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(JsonData),\n    // })\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     if (data.status === 'ok') {\n\n    //       Swal.fire({\n    //         title: 'Login success',\n    //         icon: 'success',\n    //         confirmButtonText: 'OK'\n    //       }).then((result) => {\n    //         if (result.isConfirmed) {\n    //           localStorage.setItem('token', data.token);\n    //           window.location = '/home';\n    //         }\n    //       });\n    //     } else {\n    //       Swal.fire({\n    //         title: 'Login failed',\n    //         icon: 'error',\n    //         confirmButtonText: 'OK'\n    //       })\n    //     }\n    //     console.log(\"Success:\", data);\n    //   })\n    //   .catch((error) => {\n    //     console.error(\"Error:\", error);\n    //   });\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <Box\n        sx={{\n          backgroundColor: \"#14274A\",\n        }}\n      >\n        <Navbar />\n      </Box>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            {/* <GoogleLogin\n              clientId={clientId}\n              buttonText=\"Sign In with Google\"\n              onSuccess={onSuccess}\n              onFailure={onFailure}\n              cookiePolicy={\"single_host_origin\"}\n              isSignedIn={true}\n            /> */}\n            <Grid container>\n              <Grid item>\n                <Link to=\"/register\" variant=\"body2\" component={RouterLink}>\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nfunction Footer() {\n  return (\n    <Box maxWidth=\"auto\" sx={{ bgcolor: \"#14274A\", p: 5 }} component=\"footer\">\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom style={{ color: '#F7F7F7' }}>\n            About\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" style={{ color: '#F7F7F7' }}> \n            Some information about the website or the company can go here.\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h6\" gutterBottom style={{ color: '#F7F7F7' }}>\n            Contact\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" style={{ color: '#F7F7F7' }}>\n            Email: contact@website.com\n          </Typography>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Container,\r\n  createTheme,\r\n  CssBaseline,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  ThemeProvider,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport instance from \"../axios.create\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Album() {\r\n  const [rows, setrows] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n\r\n  useEffect(() => {\r\n    instance.post(\"info_lsit\").then((response) => {\r\n      setrows(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleViewClick = (card) => {\r\n    setSelectedCard(card);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSelectedCard(null);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n\r\n      <main>\r\n        {/* Hero unit */}\r\n        <Container sx={{ py: 8 }}>\r\n          <Grid container spacing={4} justifyContent=\"center\" alignItems=\"center\">\r\n            {rows.map((card) => (\r\n              <Grid item key={card.id_info} xs={12} sm={6} md={4}>\r\n                <Card\r\n                  sx={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    image=\"https://source.unsplash.com/random\"\r\n                    alt=\"random\"\r\n                  />\r\n                  <CardContent sx={{ flexGrow: 1 }}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {card.heading}\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button\r\n                      size=\"small\"\r\n                      onClick={() => handleViewClick(card)}\r\n                      variant=\"contained\"\r\n                      sx={{ borderRadius: 5 }}\r\n                    >\r\n                      รายละเอียดเพิ่มเติม\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n\r\n\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-describedby=\"dialog-description\"\r\n        >\r\n          {selectedCard && (\r\n            <React.Fragment>\r\n              <DialogTitle id=\"dialog-title\">\r\n                {selectedCard.heading}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <Typography>{selectedCard.details}</Typography>\r\n              </DialogContent>\r\n            </React.Fragment>\r\n          )}\r\n        </Dialog>\r\n      </main>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\n// import Link from \"@mui/material/Link\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Navbar from \"../Layout/Header\";\nimport Footer from \"../Layout/Footer\";\nimport Image from \"../image/img3.png\";\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport Swal from 'sweetalert2'\nimport instance from \"../axios.create\";\nimport { useNavigate  } from \"react-router-dom\";\nimport Infopage from \"./PageInfo\";\nconst styles = {\n  paperContainer: {\n    backgroundImage: `url(${Image})`,\n    backgroundPosition: \"center\",\n  },\n};\n\nconst theme = createTheme();\n\nexport default function Album() {\n  \n  const navigate = useNavigate ();\n  document.title = 'Home';\n  useEffect(() => {\n\n    const token = localStorage.getItem(\"token\");\n    instance.post(\"authen\",{},\n        {\n          headers: {\n            Authorization: `Basic ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.status === \"ok\") {\n        } else {\n              Swal.fire({\n            title: 'Authen Time Out',\n            text: 'Please Login agin',\n            icon: 'warning',\n            confirmButtonText: 'OK'\n          }).then((result) => {\n            if (result.isConfirmed) {\n              localStorage.removeItem(\"token\");\n            }\n          });\n        }\n      });\n  }, []);\n  const linkto = (event) => {\n    event.preventDefault();\n    navigate('/room');\n  };\n\n  const color = \"#D6A144\";\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <main>\n        {/* Hero unit */}\n        <Box style={styles.paperContainer}>\n          <Navbar />\n          <Box\n            color=\"transparent\"\n            sx={{\n              pt: 10,\n              pb: 10,\n            }}\n          >\n            <Container maxWidth=\"sm\">\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"common.white\"\n                paragraph\n              >\n                WELCOME TO\n              </Typography>\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"common.white\"\n                gutterBottom\n              >\n                CONVENIENT GRAND HOTELS\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"common.white\"\n                paragraph\n              >\n                Book your stay and enjoy Luxury redefined at the most affordable\n                rates.\n              </Typography>\n              <Stack\n                sx={{ pt: 4 }}\n                direction=\"row\"\n                spacing={2}\n                justifyContent=\"center\"\n              >\n                <Button\n                  startIcon={<CalendarMonthIcon />}\n                  variant=\"contained\"\n                  onClick={linkto}\n                  sx={{\n                    backgroundColor: color,\n                    color: \"white\",\n                    \"&:hover\": {\n                      backgroundColor: color,\n                    },\n                  }}\n                >\n                  Book Now\n                </Button>\n              </Stack>\n            </Container>\n          </Box>\n        </Box> \n        <Infopage/>\n      </main>\n      {/* Footer */}\n      <Footer />\n\n      {/* End footer */}\n    </ThemeProvider>\n  );\n}\n","import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Navbar from \"../Layout/Header\";\nimport Swal from \"sweetalert2\";\nimport instance from \"../axios.create\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst theme = createTheme();\nexport default function SignUp() {\n  const [formErrors, setFormErrors] = React.useState({});\n\n  document.title = \"Register\";\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    const JsonData = {\n      id: data.get(\"id\"),\n      name: data.get(\"firstName\"),\n      lastname: data.get(\"lastName\"),\n      email: data.get(\"email\"),\n      tel: data.get(\"tel\"),\n      password: data.get(\"password\"),\n    };\n\n    // Validate form fields\n    const errors = {};\n    if (!JsonData.id) {\n      errors.id = \"ID Card number is required\";\n    }\n    if (!JsonData.name) {\n      errors.firstName = \"First Name is required\";\n    }\n    if (!JsonData.lastname) {\n      errors.lastName = \"Last Name is required\";\n    }\n    if (!JsonData.email) {\n      errors.email = \"Email Address is required\";\n    }\n    if (!JsonData.tel) {\n      errors.tel = \"Telephone is required\";\n    }\n    if (!JsonData.password) {\n      errors.password = \"Password is required\";\n    }\n    setFormErrors(errors);\n\n    // If there are no errors, submit the form\n    if (Object.keys(errors).length === 0) {\n      instance.post(\"register\", JsonData).then((response) => {\n        if (response.data.status === true) {\n          Swal.fire({\n            title: \"Register success\",\n            icon: \"success\",\n          });\n          setTimeout(function () {\n            navigate(\"/login\");\n          }, 1000);\n        } else {\n          Swal.fire({\n            title: \"Register failed\",\n            icon: \"error\",\n            confirmButtonText: \"OK\",\n          });\n        }\n      });\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box\n        sx={{\n          backgroundColor: \"#14274A\",\n        }}\n      >\n        <Navbar />\n      </Box>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"id\"\n                  label=\"ID Card number\"\n                  name=\"id\"\n                  autoComplete=\"id\"\n                  error={!!formErrors.id}\n                  helperText={formErrors.id}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  error={!!formErrors.firstName}\n                  helperText={formErrors.firstName}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"family-name\"\n                  error={!!formErrors.lastName}\n                  helperText={formErrors.lastName}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  error={!!formErrors.email}\n                  helperText={formErrors.email}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"tel\"\n                  label=\"Telephone\"\n                  name=\"tel\"\n                  autoComplete=\"tel\"\n                  error={!!formErrors.tel}\n                  helperText={formErrors.tel}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  error={!!formErrors.password}\n                  helperText={formErrors.password}\n                />\n              </Grid>\n             \n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link to=\"/login\" variant=\"body2\" component={RouterLink}>\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Navbar from \"../Layout/Header\";\nimport Image from \"../image/img5.png\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport ManageAccountsIcon from \"@mui/icons-material/ManageAccounts\";\nimport Swal from \"sweetalert2\";\nimport instance from \"../axios.create\";\nimport { useNavigate  } from \"react-router-dom\";\n\nconst styles = {\n  paperContainer: {\n    backgroundImage: `url(${Image})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n};\n\nconst theme = createTheme();\n\nexport default function Profile() {\n  document.title = 'Profile';\n\n  const navigate = useNavigate ();\n\n  const [stay, setStay] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    instance\n      .post(\n        \"authen\",\n        {},\n        {\n          headers: {\n            Authorization: `Basic ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.status === \"ok\") {\n          const temp = response.data.decoded.email;\n          const JsonData = {\n            email: temp,\n          };\n          instance.post(\"user\", JsonData).then((response) => {\n            if (response.data.status === \"ok\") {\n              document.title = 'Profile ' + response.data[\"user\"][\"name\"];\n              setid(response.data[\"user\"][\"id\"]);\n              setIdcard(response.data[\"user\"][\"idcard\"]);\n              setName(response.data[\"user\"][\"name\"]);\n              setLastname(response.data[\"user\"][\"lastname\"]);\n              setEmail(response.data[\"user\"][\"email\"]);\n              setTel(response.data[\"user\"][\"tel\"]);\n\n              setBackupidcard(response.data[\"user\"][\"idcard\"]);\n              setBackupname(response.data[\"user\"][\"name\"]);\n              setBackuplastname(response.data[\"user\"][\"lastname\"]);\n              setBackupemail(response.data[\"user\"][\"email\"]);\n              setBackuptel(response.data[\"user\"][\"tel\"]);\n            } \n\n          });\n        }else {\n          Swal.fire({\n            title: \"Authen Time Out\",\n            text: \"Please Login agin\",\n            icon: \"warning\",\n            confirmButtonText: \"OK\",\n          }).then((response) => {\n            if (response.isConfirmed) {\n              localStorage.removeItem(\"token\");\n              navigate('/home');\n            }\n          });\n        }\n      });\n\n  }, []);\n\n  const color = \"#D6A144\";\n  const [id, setid] = useState(\"\");\n  const [idcard, setIdcard] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [tel, setTel] = useState(\"\");\n\n  const [backupidcard, setBackupidcard] = useState(\"\");\n  const [backupname, setBackupname] = useState(\"\");\n  const [backuplastname, setBackuplastname] = useState(\"\");\n  const [backupemail, setBackupemail] = useState(\"\");\n  const [backuptel, setBackuptel] = useState(\"\");\n\n  const handleClick = () => {\n    setIdcard(backupidcard);\n    setName(backupname);\n    setLastname(backuplastname);\n    setEmail(backupemail);\n    setTel(backuptel);\n  };\n\n  const Clickupdate = () => {\n    const update_user = {\n      id: id,\n      idcard: idcard,\n      name: name,\n      lastname: lastname,\n      email: email,\n      tel: tel,\n    };\n    instance.put(\"update\", update_user).then((response) => {\n        if (response.data.status === \"ok\") {\n          setStay(true);\n          Swal.fire({\n            title: \"Update Success\",\n            text: \"Please Login agin\",\n            icon: \"success\",\n          })\n          localStorage.removeItem(\"token\");\n              setTimeout(function(){ navigate('/login');}, 1000);\n        }\n      \n    });\n   \n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <main>\n        {/* Hero unit */}\n        <Box style={styles.paperContainer}>\n          <Navbar />\n          <Box\n            color=\"transparent\"\n            elevation={0}\n            sx={{\n              pt: 5,\n              pb: 10,\n            }}\n          >\n            <Typography\n              variant=\"h2\"\n              align=\"center\"\n              color=\"common.white\"\n              gutterBottom\n            >\n              MY PROFILE\n            </Typography>\n          </Box>\n        </Box>\n        {/* <Container  maxWidth=\"xl\" disableGutters={true} > */}\n        <Box\n          sx={{\n            backgroundColor: \"#14274A\",\n            pt: 3,\n            pb: 8,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Box\n            sx={{\n              bgcolor: \"background.paper\",\n              boxShadow: 10,\n              borderRadius: 2,\n              p: 3,\n              ml: 4,\n              mr: 4,\n              maxWidth: \"sm\",\n            }}\n          >\n            <TextField\n              id=\"idcard\"\n              label=\"idcard\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              InputProps={{\n                readOnly: stay,\n              }}\n              onChange={(e) => setIdcard(e.target.value)}\n              value={idcard}\n            />\n\n            <TextField\n              id=\"name\"\n              label=\"name\"\n              value={name}\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              required\n              InputProps={{\n                readOnly: stay,\n              }}\n              onChange={(e) => setName(e.target.value)}\n            />\n            <TextField\n              id=\"lastname\"\n              label=\"lastname\"\n              value={lastname}\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              required\n              InputProps={{\n                readOnly: stay,\n              }}\n              onChange={(e) => setLastname(e.target.value)}\n            />\n            <TextField\n              id=\"email\"\n              label=\"email\"\n              value={email}\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              required\n              InputProps={{\n                readOnly: stay,\n              }}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              id=\"tel\"\n              label=\"Telephone\"\n              value={tel}\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              required\n              InputProps={{\n                readOnly: stay,\n              }}\n              onChange={(e) => setTel(e.target.value)}\n            />\n            {stay && (\n              <Button\n                startIcon={<ManageAccountsIcon />}\n                sx={{\n                  backgroundColor: color,\n                  color: \"white\",\n                  \"&:hover\": {\n                    backgroundColor: color,\n                  },\n                }}\n                fullWidth\n                variant=\"contained\"\n                onClick={() => {\n                  setStay(false);\n                }}\n              >\n                Change About\n              </Button>\n            )}\n            {!stay && (\n              <div>\n                <Button\n                  variant=\"contained\"\n                  color=\"success\"\n                  onClick={() => {\n                    Clickupdate();\n                  }}\n                >\n                  update\n                </Button>\n                <Button\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => {\n                    setStay(true);\n                    handleClick();\n                  }}\n                  sx={{ ml: 4 }}\n                >\n                  Cancel\n                </Button>\n              </div>\n            )}\n          </Box>\n        </Box>\n        {/* </Container> */}\n      </main>\n    </ThemeProvider>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Navbar from \"../Layout/Header\";\nimport Image from \"../image/img3.png\";\n// import Swal from \"sweetalert2\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Grid from \"@mui/material/Grid\";\nimport Room1 from \"../image/room1.jpg\";\nimport instance from \"../axios.create\";\nimport { useNavigate } from 'react-router-dom';\nimport Footer from \"../Layout/Footer\";\n\nconst styles = {\n  paperContainer: {\n    backgroundImage: `url(${Image})`,\n    backgroundPosition: \"center\",\n  },\n};\n\nconst theme = createTheme();\n\nexport default function Album() {\n  document.title = 'Room';\n\n  const [rows, setrows] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    instance\n      .post(\n        \"authen\",\n        {},\n        {\n          headers: {\n            Authorization: `Basic ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.status === \"ok\") {\n        } else {\n          // Swal.fire({\n          //   title: 'Authen Time Out',\n          //   text: 'Please Login agin',\n          //   icon: 'warning',\n          //   confirmButtonText: 'OK'\n          // }).then((result) => {\n          //   if (result.isConfirmed) {\n          //     localStorage.removeItem(\"token\");\n          //   }\n          // });\n        }\n      });\n\n    instance.get(\"roomdata\").then((response) => {\n      setrows(response.data);\n    });\n    sessionStorage.clear();\n  }, []);\n\n  const handleClick = (id_Type , nameroom) => {\n    sessionStorage.setItem(\"id_Type\", id_Type);\n    sessionStorage.setItem(\"nameroom\", nameroom);\n    navigate('/roomselect');\n\n\n  };\n\n  const color = \"#14274A\";\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <main>\n        {/* Hero unit */}\n        <Box style={styles.paperContainer}>\n          <Navbar />\n          <Box\n            color=\"transparent\"\n            sx={{\n              pt: 10,\n              pb: 10,\n            }}\n          >\n            <Container maxWidth=\"sm\">\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"common.white\"\n                paragraph\n              >\n                WELCOME TO\n              </Typography>\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"common.white\"\n                gutterBottom\n              >\n                Room\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"common.white\"\n                paragraph\n              >\n                Book your stay and enjoy Luxury redefined at the most affordable\n                rates.\n              </Typography>\n              <Stack\n                sx={{ pt: 4 }}\n                direction=\"row\"\n                spacing={2}\n                justifyContent=\"center\"\n              ></Stack>\n            </Container>\n          </Box>\n        </Box>\n\n        <Container sx={{ py: 1 }} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {rows.map((row) => (\n              <Grid item key={row.id} xs={12} sm={12} md={12}>\n                <Card\n                  sx={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                  }}\n                >\n                  <CardMedia\n                    component=\"img\"\n                    sx={{\n                      // 16:9\n                      pt: 5,\n                    }}\n                    image={Room1}\n                    alt=\"random\"\n                  />\n                  <CardContent\n                    sx={{\n                      flexGrow: 1,\n                      bgcolor: color,\n                      textAlign: \"center\",\n                      color: \"#f0f0f0\",\n                    }}\n                  >\n                    <Typography sx={{ textAlign: \"center\" }}>\n                      {row.nameroom}\n                    </Typography>\n                  </CardContent>\n                  <CardContent sx={{ flexGrow: 1 }}>\n                    <Typography>{row.title}</Typography>{\" \"}\n                  </CardContent>\n\n                  <CardActions>\n                    {/* <Button\n                      size=\"small\"\n                      href={\"/\" + row.path}\n                      onClick={() => handleClick(row.path)}\n                    >\n                      ดูเพิ่มเติม\n                    </Button> */}\n                    <Button\n                      variant=\"contained\"\n                      color=\"success\"\n                      onClick={() => handleClick(row.id, row.path)}\n                      sx={{\n                        color: \"white\",\n                      }}\n                    >\n                      ดูเพิ่มเติม\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <Footer />\n\n      {/* End footer */}\n    </ThemeProvider>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  CssBaseline,\n  Stack,\n  Box,\n  Typography,\n  Container,\n  createTheme,\n  ThemeProvider,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Grid,\n} from \"@mui/material\";\nimport Navbar from \"../Layout/Header\";\nimport Image from \"../image/img3.png\";\nimport Swal from \"sweetalert2\";\nimport instance from \"../axios.create\";\nimport dayjs from \"dayjs\";\nimport { DemoItem } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\";\nimport { useNavigate  } from \"react-router-dom\";\n\nimport \"dayjs/locale/th\";\n\nimport Room1 from \"../image/room1.jpg\";\nconst styles = {\n  paperContainer: {\n    backgroundImage: `url(${Image})`,\n    backgroundPosition: \"center\",\n  },\n};\n\nconst theme = createTheme();\n\nexport default function Superior() {\n  const navigate = useNavigate ();\n\n  const [rows, setrows] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(dayjs(new Date()));\n  const [selectedDateout, setSelectedDateout] = useState();\n  const [roomname, setroomname] = useState();\n\n  var tomorrow = new Date(selectedDate);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  sessionStorage.removeItem(\"roomkey\");\n\n  useEffect(() => {\n    \n\n    sessionStorage.setItem(\"checkout\", selectedDateout);\n    sessionStorage.setItem(\"checkin\", selectedDate);\n   \n    const Data = {\n      id_Type: sessionStorage.getItem(\"id_Type\"),\n    };\n    instance.post(\"roomtype\", Data).then((response) => {\n      \n      setroomname(response.data[0].nameroom);\n      document.title = response.data[0].nameroom;\n    });\n    \n    const token = localStorage.getItem(\"token\");\n    instance\n      .post(\n        \"authen\",\n        {},\n        {\n          headers: {\n            Authorization: `Basic ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.status === \"ok\") {\n        } else {\n          // Swal.fire({\n          //   title: 'Authen Time Out',\n          //   text: 'Please Login agin',\n          //   icon: 'warning',\n          //   confirmButtonText: 'OK'\n          // }).then((result) => {\n          //   if (result.isConfirmed) {\n          //     localStorage.removeItem(\"token\");\n          //   }\n          // });\n        }\n      });\n      \n  }, []);\n  \n  function check(temp) {\n    const checkStatus = temp;\n    const buttonColor = checkStatus ? \"error\" : \"success\";\n    return buttonColor;\n  }\n\n  function check1(temp, price) {\n    const checkStatus = temp;\n    const Buttonname = checkStatus\n      ? \"ห้องไม่ว่าง\"\n      : \"ห้องว่าง ราคา \" + price + \"/คืน\";\n    return Buttonname;\n  }\n\n  const handleClick = (param, id) => {\n    if (param === 1) {\n      Swal.fire({\n        title: \"ห้องไม่ว่าง\",\n        text: \"ห้องไม่ว่าง โปรดเลือกห้องใหม่\",\n        icon: \"warning\",\n        confirmButtonText: \"OK\",\n      });\n    } else {\n      if (localStorage.getItem(\"token\") === null) {\n        Swal.fire({\n          title: \"ยังไม่ได้เข้าสู่ระบบ\",\n          text: \"โปรดเข้าสู่ระบบหรือสมัคสมาชิก\",\n          icon: \"warning\",\n          confirmButtonText: \"OK\",\n        });\n      } else if (selectedDateout <= selectedDate) {\n        Swal.fire({\n          title: \"โปรดเลือกวันที่พักใหม่\",\n          text: \"โปรดเลือกวันที่ Check out ใหม่\",\n          icon: \"warning\",\n          confirmButtonText: \"OK\",\n        });\n      } else {\n        sessionStorage.setItem(\"roomkey\", id);\n\n        navigate('/pay1');\n      }\n    }\n  };\n\n  function handle() {\n\n    if (sessionStorage.getItem(\"checkout\") === \"undefined\") {\n      Swal.fire({\n        title: \"โปรดเลือกวันที่เข้าพัก\",\n        text: \"โปรดเลือกวันที่ Check in และ Check out\",\n        icon: \"warning\",\n        confirmButtonText: \"OK\",\n      });\n\n    }else if (selectedDateout <= selectedDate) {\n      Swal.fire({\n        title: \"โปรดเลือกวันที่พักใหม่\",\n        text: \"โปรดเลือกวันที่ Check out ใหม่\",\n        icon: \"warning\",\n        confirmButtonText: \"OK\",\n      });\n    } else{\n      const JsonData = {\n      id_Type: sessionStorage.getItem(\"id_Type\"),\n      nameroom: sessionStorage.getItem(\"nameroom\"),\n      checkin: sessionStorage.getItem(\"checkin\"),\n      checkout: sessionStorage.getItem(\"checkout\"),\n    };\n    instance.post(\"check\",JsonData).then((response) => {\n      setrows(response.data);\n    });\n    }\n    \n  }\n  const color = \"#14274A\";\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <main>\n        {/* Hero unit */}\n        <Box style={styles.paperContainer}>\n          <Navbar />\n          <Box\n            color=\"transparent\"\n            sx={{\n              pt: 10,\n              pb: 10,\n            }}\n          >\n            <Container maxWidth=\"sm\">\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"common.white\"\n                paragraph\n              >\n                WELCOME TO\n              </Typography>\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"common.white\"\n                gutterBottom\n              >\n                {roomname}\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"common.white\"\n                paragraph\n              >\n                Book your stay and enjoy Luxury redefined at the most affordable\n                rates.\n              </Typography>\n              <Stack\n                sx={{ pt: 4 }}\n                direction=\"row\"\n                spacing={2}\n                justifyContent=\"center\"\n              ></Stack>\n            </Container>\n          </Box>\n        </Box>\n\n        <Container sx={{ py: 1 ,mt: 3}} maxWidth=\"md\">\n          <Box sx={{ display: 'flex', alignItems: 'center' , justifyContent: 'center' }}>\n            <LocalizationProvider\n              dateAdapter={AdapterDayjs}\n              adapterLocale={\"th\"}\n            >\n              <DemoItem label=\"Check in\">\n                <MobileDatePicker\n                  minDate={dayjs(new Date())}\n                  onChange={(date) => {\n                    setSelectedDate(date);\n                    const test = new Date(date);\n                    sessionStorage.setItem(\"checkin\", test);\n                  }}\n                  value={selectedDate}\n                  sx={{ pr: 1 }}\n                />\n              </DemoItem>\n              <DemoItem label=\"Check out\">\n                <MobileDatePicker\n                  minDate={dayjs(tomorrow)}\n                  onChange={(date) => {\n                    const test = new Date(date);\n                    // test.setDate(test.getDate() + 1);\n                    setSelectedDateout(test);\n                    sessionStorage.setItem(\"checkout\", test);\n\n                  }}\n                />\n              </DemoItem>\n              <Button\n                variant=\"contained\"\n                startIcon={<SearchIcon />}\n                sx={{ height: \"100%\", ml: 1, borderRadius: 5 , mt: 3}}\n                onClick={handle}\n\n              >\n                Search\n              </Button>\n              \n            </LocalizationProvider>\n          </Box>\n          <Grid\n            container\n            spacing={4}\n            sx={{\n              pt: 5,\n            }}\n          >\n            {rows.map((row) => (\n              <Grid item key={row.id_room} xs={12} sm={12} md={12}>\n                <Card\n                  sx={{\n                    height: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                  }}\n                >\n                  <CardMedia component=\"img\" image={Room1} alt=\"random\" />\n                  <CardContent\n                    sx={{\n                      flexGrow: 1,\n                      bgcolor: color,\n                      textAlign: \"center\",\n                      color: \"#f0f0f0\",\n                    }}\n                  >\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {row.name_room}\n                    </Typography>\n                  </CardContent>\n                  <CardContent sx={{ flexGrow: 1 }}>\n                    <Typography>{row.detill_room}</Typography>\n                  </CardContent>\n                  <CardActions disableSpacing>\n                    <Button\n                      variant=\"contained\"\n                      color={check(row.status)}\n                      onClick={() => handleClick(row.status, row.id_room)}\n                    >\n                      {check1(row.status, row.price)}\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n\n      {/* End footer */}\n    </ThemeProvider>\n  );\n}\n","import Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { CardActionArea } from \"@mui/material\";\nimport Room1 from \"../image/room1.jpg\";\nimport React, { useEffect, useState } from \"react\";\nimport instance from \"../axios.create\";\n\nexport default function Roomdetail() {\n  const [rows, setrows] = useState([]);\n\n  // const nameroom = sessionStorage.getItem('nameroom');\n  // const roomkey = sessionStorage.getItem('roomkey');\n  const checkin = new Date(sessionStorage.getItem(\"checkin\"));\n  const checkout = new Date(sessionStorage.getItem(\"checkout\"));\n\n  const dayOfWeekin = checkin.getDay();\n  const dayOfWeekout = checkout.getDay();\n\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  function test() {\n    const T1 = new Date(checkin);\n    var count = 0;\n    while (T1 <= checkout) {\n      T1.setDate(T1.getDate() + 1);\n      count++;\n    }\n    return count;\n  }\n\n  useEffect(() => {\n    test();\n    const dataJson = {\n      id_Type: sessionStorage.getItem(\"id_Type\"),\n      roomkey: sessionStorage.getItem(\"roomkey\"),\n    };\n    instance.post(\"payroom\", dataJson).then((response) => {\n      setrows(response.data);\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      {rows.map((row) => (\n        <Card\n          key={row.id_room}\n          variant=\"outlined\"\n          sx={{\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image={Room1}\n              alt=\"green iguana\"\n            />\n\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {row.name_room}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {row.detill_room}\n              </Typography>\n              <Typography level=\"body3\" sx={{ py: 2 }}>\n                Check in{\" \"}\n                {days[dayOfWeekin] +\n                  \" \" +\n                  checkin.getDate() +\n                  \"/\" +\n                  checkin.getMonth() +\n                  \"/\" +\n                  checkin.getFullYear()}\n              </Typography>\n              <Typography level=\"body3\" sx={{ py: 1 }}>\n                Check out{\" \"}\n                {days[dayOfWeekout] +\n                  \" \" +\n                  checkout.getDate() +\n                  \"/\" +\n                  checkout.getMonth() +\n                  \"/\" +\n                  checkout.getFullYear()}\n              </Typography>\n              <Typography level=\"body3\" sx={{ py: 1 }}>\n                Price Total {row.price * test()}\n                {sessionStorage.setItem(\"price\", row.price * test())}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      ))}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Swal from \"sweetalert2\";\n\nconst generatePayload = require(\"promptpay-qr\");\nfunction LoadingScreen() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <CircularProgress />\n    </div>\n  );\n}\nfunction showProgress(){\n  console.log(\"Show progress\");\n}\n\nexport default function Payment() {\n  const phoneNumber = \"097-265-4762\";\n  const amount = parseInt(sessionStorage.getItem(\"price\"));\n  const [qrCode, setqrCode] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Function to handle payment processing\n  function handleQR() {\n    setqrCode(generatePayload(phoneNumber, { amount }));\n  }\n\n  useEffect(() => {\n    handleQR();\n    setTimeout(() => {\n      setIsLoading(true);\n      setTimeout(() => {\n        Swal.fire({\n          icon: \"success\",\n          title: \"Payment success!!\",\n          showConfirmButton: false,\n          timer: 1500,\n        });\n        showProgress();\n      }, 2000);\n    }, 2000);\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {!isLoading && <QRCode value={qrCode} />}\n\n        {isLoading && <LoadingScreen />}\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport instance from \"../axios.create\";\n\nexport default function RandomNumberGenerator() {\n  const [randomNumber, setRandomNumber] = useState(\"\");\n  const dataFetchedRef = useRef(false);\n\n  function insert() {\n    const token = localStorage.getItem(\"token\");\n    const newNumber = Math.floor(Math.random() * 100000);\n    setRandomNumber(newNumber.toString().padStart(5, \"0\"));\n    const password_room = newNumber.toString().padStart(5, \"0\");\n    instance\n      .post(\n        \"authen\",\n        {},\n        {\n          headers: {\n            Authorization: `Basic ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.status === \"ok\") {\n          const temp = response.data.decoded.email;\n          const JsonData = {\n            email: temp,\n            nameroom: sessionStorage.getItem(\"nameroom\"),\n            id_room: sessionStorage.getItem(\"roomkey\"),\n            checkin: sessionStorage.getItem(\"checkin\"),\n            checkout: sessionStorage.getItem(\"checkout\"),\n            price_total: sessionStorage.getItem(\"price\"),\n            password_room: password_room,\n            status_room: 1,\n          };\n          instance.post(\"booking\", JsonData).then((res) => {\n          });\n        }\n      });\n  }\n  useEffect(() => {\n    if (dataFetchedRef.current) return;\n    dataFetchedRef.current = true;\n    insert();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <p>Room Password : {randomNumber}</p>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <QRCode value={randomNumber} />\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport instance from \"../axios.create\";\nimport Swal from \"sweetalert2\";\n\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Navbar from \"../Layout/Header\";\n\nimport Paper from \"@mui/material/Paper\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Roomdetail from \"./Roomdetail\";\nimport Payment from \"./Payment\";\nimport Gpass from \"./Gp_room\";\nimport { useNavigate  } from \"react-router-dom\";\n\nconst theme = createTheme();\n\nconst steps = [\"Room detail\", \"Payment details\", \"Room password\"];\nconst stepContentMap = {\n  0: <Roomdetail />,\n  1: <Payment />,\n  2: <Gpass />,\n};\n\nexport default function Pay() {\n  document.title = 'Payment';\n  const navigate = useNavigate ();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    instance\n      .post(\n        \"authen\",\n        {},\n        {\n          headers: {\n            Authorization: `Basic ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.status === \"ok\") {\n        }else {\n          Swal.fire({\n            title: 'Authen Time Out',\n            text: 'Please Login agin',\n            icon: 'warning',\n            showConfirmButton: false,\n          })\n          setTimeout(function(){ navigate('/home');}, 1000);\n        }\n      });\n  }, []);\n \n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <main>\n        {/* Hero unit */}\n        <Box\n          sx={{\n            backgroundColor: \"#14274A\",\n          }}\n        >\n          <Navbar />\n        </Box>\n\n        <Container sx={{ py: 1 }} maxWidth=\"md\">\n          <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 4 }}>\n            <Paper\n              variant=\"outlined\"\n              sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}\n            >\n              <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                PAY & BOOK\n              </Typography>\n              <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n                {steps.map((label) => (\n                  <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                  </Step>\n                ))}\n              </Stepper>\n              {activeStep === steps.length ? (\n                <React.Fragment>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Thank you for your order.\n                  </Typography>\n                  <Typography variant=\"subtitle1\">\n                    Your order number is #2001539. We have emailed your order\n                    confirmation, and will send you an update when your order\n                    has shipped.\n                  </Typography>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  {stepContentMap[activeStep]}\n                  <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                    {activeStep !== 0 && (\n                      <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\n                        Back\n                      </Button>\n                    )}\n\n                    <Button\n                      variant=\"contained\"\n                      onClick={handleNext}\n                      sx={{ mt: 3, ml: 1 }}\n                    >\n                      {activeStep === steps.length - 1 ? \"Place order\" : \"Next\"}\n                    </Button>\n                  </Box>\n                </React.Fragment>\n              )}\n            </Paper>\n          </Container>\n        </Container>\n      </main>\n      {/* Footer */}\n\n      {/* End footer */}\n    </ThemeProvider>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Navbar from \"../Layout/Header\";\r\nimport Image from \"../image/img5.png\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Swal from \"sweetalert2\";\r\nimport instance from \"../axios.create\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Room1 from \"../image/room1.jpg\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport QRCode from \"qrcode.react\";\r\nconst style_ = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: \"background.paper\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  borderRadius: 4,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n};\r\nconst styles = {\r\n  paperContainer: {\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n};\r\n\r\nconst theme = createTheme();\r\nconst color = \"#14274A\";\r\n\r\nexport default function Profile() {\r\n  const [rows, setrows] = useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [randomNumber, setRandomNumber] = useState(\"\");\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    instance\r\n      .post(\r\n        \"authen\",\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Basic ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.data.status === \"ok\") {\r\n          const temp = response.data.decoded.email;\r\n          const JsonData = {\r\n            email: temp,\r\n          };\r\n          instance.post(\"myroom\", JsonData).then((response) => {\r\n            console.log(response.data);\r\n            setrows(response.data);\r\n          });\r\n        }else {\r\n          Swal.fire({\r\n            title: 'Authen Time Out',\r\n            text: 'Please Login agin',\r\n            icon: 'warning',\r\n            confirmButtonText: 'OK'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              localStorage.removeItem(\"token\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n  console.log();\r\n  const days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  function check(temp) {\r\n    const checkStatus = temp;\r\n    const buttonColor = checkStatus ? \"error\" : \"success\";\r\n    return buttonColor;\r\n  }\r\n\r\n  function check1(temp) {\r\n    const checkStatus = temp;\r\n    const Buttonname = checkStatus\r\n      ? \"กำลังอยู่ในระหว่างเข้าพัก\"\r\n      : \"เช็คเอาท์เรียบร้อยแล้ว\";\r\n    return Buttonname;\r\n  }\r\n  const handleClick = (param) => {\r\n    setOpen(true);\r\n    setRandomNumber(param);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <Box style={styles.paperContainer}>\r\n          <Navbar />\r\n          <Box\r\n            color=\"transparent\"\r\n            elevation={0}\r\n            sx={{\r\n              pt: 5,\r\n              pb: 10,\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"common.white\"\r\n              gutterBottom\r\n            >\r\n              MY Room\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            backgroundColor: \"#14274A\",\r\n            pt: 3,\r\n            pb: 8,\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              bgcolor: \"background.paper\",\r\n              boxShadow: 10,\r\n              borderRadius: 2,\r\n              p: 3,\r\n              ml: 4,\r\n              mr: 4,\r\n              maxWidth: \"sm\",\r\n            }}\r\n          >\r\n            <Grid\r\n              container\r\n              spacing={4}\r\n              sx={{\r\n                pt: 5,\r\n              }}\r\n            >\r\n              {rows.map((row) => (\r\n                <Grid item key={row.id_book} xs={12} sm={12} md={12}>\r\n                  <Card\r\n                    sx={{\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                    }}\r\n                  >\r\n                    <CardMedia component=\"img\" image={Room1} alt=\"random\" />\r\n                    <CardContent\r\n                      sx={{\r\n                        flexGrow: 1,\r\n                        bgcolor: color,\r\n                        textAlign: \"center\",\r\n                        color: \"#f0f0f0\",\r\n                      }}\r\n                    >\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {row.name_room}\r\n                      </Typography>\r\n                    </CardContent>\r\n                    <CardContent sx={{ flexGrow: 1 }}>\r\n                      <Typography>{row.detill_room}</Typography>\r\n                      <Typography level=\"body3\" sx={{ py: 2 }}>\r\n                        Check in{\" \"}\r\n                        {days[new Date(row.checkin_room).getDay()] +\r\n                          \" \" +\r\n                          new Date(row.checkin_room).getDate() +\r\n                          \"/\" +\r\n                          new Date(row.checkin_room).getMonth() +\r\n                          \"/\" +\r\n                          new Date(row.checkin_room).getFullYear()}\r\n                      </Typography>\r\n                      <Typography level=\"body3\" sx={{ py: 1 }}>\r\n                        Check out{\" \"}\r\n                        {days[new Date(row.checkout_room).getDay()] +\r\n                          \" \" +\r\n                          new Date(row.checkout_room).getDate() +\r\n                          \"/\" +\r\n                          new Date(row.checkout_room).getMonth() +\r\n                          \"/\" +\r\n                          new Date(row.checkout_room).getFullYear()}\r\n                      </Typography>\r\n                      <Typography level=\"body3\" sx={{ py: 1 }}>\r\n                        {/* Price Total {row.price * test()}\r\n                        {sessionStorage.setItem(\"price\", row.price * test())} */}\r\n                      </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                      <Button color={check(row.status_room)} >\r\n                        {check1(row.status_room)}\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        sx={{ borderRadius: 5, ml: \"auto\" }}\r\n                        onClick={() => handleClick(row.password_room)}\r\n                      >\r\n                        ดูรหัสผ่านห้อง\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n            <Modal open={open} onClose={handleClose}>\r\n              <Box sx={style_}>\r\n                <Typography variant=\"h6\" component=\"h2\">\r\n                  password is = {randomNumber}\r\n                </Typography>\r\n\r\n                <QRCode value={randomNumber} />\r\n              </Box>\r\n            </Modal>\r\n          </Box>\r\n        </Box>\r\n      </main>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport Navbar from \"../Layout/Header\";\nimport Image from \"../image/img5.png\";\nimport Button from \"@mui/material/Button\";\nimport Swal from \"sweetalert2\";\nimport instance from \"../axios.create\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Grid from \"@mui/material/Grid\";\nimport Room1 from \"../image/room1.jpg\";\nimport Modal from \"@mui/material/Modal\";\nimport QRCode from \"qrcode.react\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport Footer from \"../Layout/Footer\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { useNavigate  } from \"react-router-dom\";\n\nconst style_ = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 4,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\nconst styles = {\n  paperContainer: {\n    backgroundImage: `url(${Image})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n};\n\nconst theme = createTheme();\n\nexport default function Profile() {\n  document.title = 'My Room';\n\n  const navigate = useNavigate ();\n\n  const [rows, setrows] = useState([]);\n  const [open, setOpen] = React.useState(false);\n  const [randomNumber, setRandomNumber] = useState(\"\");\n\n  const handleClose = () => setOpen(false);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    instance\n      .post(\n        \"authen\",\n        {},\n        {\n          headers: {\n            Authorization: `Basic ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.status === \"ok\") {\n          const temp = response.data.decoded.email;\n          const JsonData = {\n            email: temp,\n          };\n          instance.post(\"myroom\", JsonData).then((response) => {\n            setrows(response.data);\n          });\n        } else {\n          Swal.fire({\n            title: \"Authen Time Out\",\n            text: \"Please Login agin\",\n            icon: \"warning\",\n            showConfirmButton: false,\n          });\n          setTimeout(function () {\n            navigate(\"/home\");\n          }, 1000);\n        }\n      });\n  }, []);\n  const days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  function check(temp) {\n    const checkStatus = temp;\n    const buttonColor = checkStatus ? \"error\" : \"success\";\n    return buttonColor;\n  }\n\n  function check1(temp) {\n    const checkStatus = temp;\n    const Buttonname = checkStatus\n      ? \"กำลังอยู่ในระหว่างเข้าพัก \"\n      : \"เช็คเอาท์เรียบร้อยแล้ว \";\n    const Icon = checkStatus ? <ErrorIcon /> : <CheckCircleIcon />;\n    return { Icon, Buttonname };\n  }\n  const handleClick = (param) => {\n    setOpen(true);\n    setRandomNumber(param);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <main>\n        {/* Hero unit */}\n        <Box style={styles.paperContainer}>\n          <Navbar />\n          <Box\n            color=\"transparent\"\n            elevation={0}\n            sx={{\n              pt: 5,\n              pb: 10,\n            }}\n          >\n            <Typography\n              variant=\"h2\"\n              align=\"center\"\n              color=\"common.white\"\n              gutterBottom\n            >\n              MY Room\n            </Typography>\n          </Box>\n        </Box>\n\n        <Box sx={{ px: 10, pb: 21, pt: 2, backgroundColor: \"#14274A\" }}>\n          <Typography\n            variant=\"h4\"\n            gutterBottom\n            style={{ textAlign: \"center\", color: \"white\" }}\n          >\n            Booking History\n          </Typography>\n          {rows.length === 0 ? (\n            <Typography\n              variant=\"h5\"\n              gutterBottom\n              style={{ textAlign: \"center\", color: \"white\", m: 5 }}\n            >\n              No rooms available\n            </Typography>\n          ) : (\n            <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n              {rows.map((booking) => (\n                <Grid item xs={12} sm={6} md={4} key={booking.id_book}>\n                  <Card sx={{ height: \"100%\" }}>\n                    <CardMedia\n                      component=\"img\"\n                      height=\"150\"\n                      image={Room1}\n                      alt={booking.name_room}\n                    />\n                    <CardContent>\n                      <Typography\n                        variant=\"h6\"\n                        gutterBottom\n                        sx={{ fontWeight: \"bold\" }}\n                      >\n                        {booking.name_room}\n                      </Typography>\n                      <Typography variant=\"subtitle1\" sx={{ mb: 2 }}>\n                        Booking ID: {booking.id_book}\n                      </Typography>\n                      <Typography sx={{ mb: 2 }}>\n                        {booking.detill_room}\n                      </Typography>\n                      <Typography variant=\"h6\" sx={{ mb: 2 }}>\n                        THB: {booking.price_room} / night\n                      </Typography>\n                      <Typography sx={{ mb: 2 }}>\n                        <strong> Check in: </strong>\n                        {days[new Date(booking.checkin_room).getDay()] +\n                          \" \" +\n                          new Date(booking.checkin_room).getDate() +\n                          \"/\" +\n                          new Date(booking.checkin_room).getMonth() +\n                          \"/\" +\n                          new Date(booking.checkin_room).getFullYear()}\n                      </Typography>\n                      <Typography sx={{ mb: 2 }}>\n                        <strong> Check out: </strong>\n                        {days[new Date(booking.checkout_room).getDay()] +\n                          \" \" +\n                          new Date(booking.checkout_room).getDate() +\n                          \"/\" +\n                          new Date(booking.checkout_room).getMonth() +\n                          \"/\" +\n                          new Date(booking.checkout_room).getFullYear()}\n                      </Typography>\n                      <Typography sx={{ mb: 2 }}>\n                        <strong>Price Total: </strong>\n                        {booking.price_total}\n                      </Typography>\n                    </CardContent>\n                    <CardActions sx={{ justifyContent: \"space-between\" }}>\n                      <Button color={check(booking.status_room)}>\n                        {check1(booking.status_room).Icon}\n                        {\"   \"}\n                        {check1(booking.status_room).Buttonname}\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        sx={{ borderRadius: 5 }}\n                        onClick={() => handleClick(booking.password_room)}\n                      >\n                        ดูรหัสผ่านห้อง\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          )}\n          <Modal open={open} onClose={handleClose}>\n            <Box sx={style_}>\n              <Typography variant=\"h6\" component=\"h2\">\n                password is = {randomNumber}\n              </Typography>\n\n              <QRCode value={randomNumber} />\n            </Box>\n          </Modal>\n        </Box>\n      </main>\n      <Footer />\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\n// import Link from \"@mui/material/Link\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Navbar from \"../Layout/Header\";\r\nimport Footer from \"../Layout/Footer\";\r\nimport Image from \"../image/img3.png\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n    \"& .MuiButton-root\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst styles = {\r\n  paperContainer: {\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundPosition: \"center\",\r\n  },\r\n};\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Album() {\r\n  const classes = useStyles();\r\n  document.title = \"Contact\";\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n\r\n      <main>\r\n        {/* Hero unit */}\r\n        <Box style={styles.paperContainer}>\r\n          <Navbar />\r\n          <Box\r\n            color=\"transparent\"\r\n            sx={{\r\n              pt: 10,\r\n              pb: 10,\r\n            }}\r\n          >\r\n            <Container >\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h2\"\r\n                align=\"center\"\r\n                color=\"common.white\"\r\n                gutterBottom\r\n              >\r\n                CONTACT\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h5\"\r\n                align=\"center\"\r\n                color=\"common.white\"\r\n                paragraph\r\n              >\r\n                At Luxury Hotels, we take our customers seriously. Do you have\r\n                any enquiries, compaints or requests, please forward it to our\r\n                support desk and we will get back to you as soon as possible.\r\n              </Typography>\r\n            </Container>\r\n          </Box>\r\n        </Box>\r\n\r\n        <form className={classes.form}>\r\n          <TextField label=\"Name\" variant=\"outlined\" required />\r\n          <TextField label=\"Email\" variant=\"outlined\" type=\"email\" required />\r\n          <TextField\r\n            label=\"Message\"\r\n            variant=\"outlined\"\r\n            multiline\r\n            rows={4}\r\n            required\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\">\r\n            Send\r\n          </Button>\r\n        </form>\r\n      </main>\r\n      {/* Footer */}\r\n      <Footer />\r\n\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import * as React from \"react\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport RecentActorsIcon from \"@mui/icons-material/RecentActors\";\nimport PeopleIcon from \"@mui/icons-material/People\";\nimport AssignmentIcon from \"@mui/icons-material/Assignment\";\nimport RoomPreferencesIcon from '@mui/icons-material/RoomPreferences';\nimport DirectionsWalkIcon from '@mui/icons-material/DirectionsWalk';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport CollectionsBookmarkIcon from '@mui/icons-material/CollectionsBookmark';\nimport { Link as RouterLink  } from \"react-router-dom\";\nimport InfoIcon from '@mui/icons-material/Info';\nconst handlelogout = () => {\n  localStorage.removeItem(\"token\");\n\n};\n\nconst handleClearSessionStorage = () => {\n  sessionStorage.clear();\n};\nexport const mainListItems = (\n  <React.Fragment>\n    <ListItemButton to=\"/dashboard/userdata/0\" component={RouterLink}>\n      <ListItemIcon>\n        <RecentActorsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"User Data List\" />\n    </ListItemButton>\n    <ListItemButton to=\"/dashboard/roomdata/1\" component={RouterLink}>\n      <ListItemIcon>\n        <CollectionsBookmarkIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Room Booking List\" />\n    </ListItemButton>\n    <ListItemButton to=\"/dashboard/roomlist/2\" component={RouterLink}>\n      <ListItemIcon>\n        <RoomPreferencesIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Room List\" />\n    </ListItemButton>\n    <ListItemButton to=\"/dashboard/typelist/3\" component={RouterLink}>\n      <ListItemIcon>\n        <RoomPreferencesIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Type Room List\" />\n    </ListItemButton>\n  </React.Fragment>\n);\n\nexport const secondaryListItems = (\n  <React.Fragment>\n    <ListItemButton to=\"/login\" component={RouterLink}>\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Login\" />\n    </ListItemButton>\n  </React.Fragment>\n);\n\nexport const loginprofile = (\n  <React.Fragment>\n    <ListItemButton to=\"/home\" onClick={handlelogout} component={RouterLink} >\n      <ListItemIcon>\n        <LogoutIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Logout\" />\n    </ListItemButton>\n  </React.Fragment>\n);\n\nexport const adminconsole = (\n  <React.Fragment>\n     <ListItemButton to=\"/dashboard/walk_check_in/5/0\" onClick={handleClearSessionStorage} component={RouterLink}>\n      <ListItemIcon>\n        <DirectionsWalkIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Walk Check in\" />\n    </ListItemButton>\n    <ListItemButton to=\"/dashboard/employee/4\" component={RouterLink}>\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Employee List\" />\n    </ListItemButton>\n    <ListItemButton to=\"/dashboard/info/6\" component={RouterLink}>\n      <ListItemIcon>\n        <InfoIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Info List\" />\n    </ListItemButton>\n  </React.Fragment>\n);\n","import React, { useEffect, useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport instance from \"../axios.create\";\n\nexport default function Userdata() {\n  document.title = 'User data List';\n\n  const [rows, setrows] = useState([]);\n  useEffect(() => {\n    instance.get(\"userdata\").then((response) => {\n      setrows(response.data);\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>ID Card</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Last Name</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Telephone</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.id}</TableCell>\n              <TableCell>{row.idcard}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.lastname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.tel}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n\n      <style>{`\n  table {\n    border-collapse: collapse;\n    width: 100%;\n    max-width: 1200px;\n    margin: 0 auto;\n    font-size: 14px;\n  }\n  \n  th {\n    background-color: #f5f5f5;\n    border: 1px solid #ddd;\n    font-weight: bold;\n    padding: 10px;\n    text-align: left;\n  }\n  \n  td {\n    border: 1px solid #ddd;\n    padding: 10px;\n  }\n  \n  tr:nth-child(even) td {\n    background-color: #f5f5f5;\n  }\n  \n  tr:hover td {\n    background-color: #fafafa;\n  }\n  \n  @media (max-width: 600px) {\n    table {\n      font-size: 12px;\n    }\n    th, td {\n      padding: 5px;\n    }\n    th {\n      font-size: 12px;\n    }\n    td:before {\n      content: attr(data-label);\n      font-weight: bold;\n      display: block;\n      margin-bottom: 5px;\n    }\n  }\n`}</style>\n\n\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n// import Link from \"@mui/material/Link\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport { format } from \"date-fns\";\nimport Modal from \"@mui/material/Modal\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Button } from \"@mui/material\";\nimport instance from \"../axios.create\";\nimport QRCode from \"qrcode.react\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Swal from \"sweetalert2\";\nimport { useNavigate } from \"react-router-dom\";\nimport { InputAdornment, TextField } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nconst style_ = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 4,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport default function Roomdata() {\n  document.title = \"Room data\";\n  const navigate = useNavigate();\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const [rows, setrows] = useState([]);\n  const [type, settype] = useState([]);\n  const [randomNumber, setRandomNumber] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const handleClose = () => setOpen(false);\n\n  useEffect(() => {\n    instance.get(\"bookingdata\").then((response) => {\n      setrows(response.data);\n    });\n    instance.get(\"typeroom\").then((response) => {\n      settype(response.data);\n    });\n  }, []);\n\n  function check(temp) {\n    const checkStatus = temp;\n    const buttonColor = checkStatus ? \"red\" : \"green\";\n    return buttonColor;\n  }\n  function check1(temp) {\n    const checkStatus = temp;\n    const Buttonname = checkStatus\n      ? \"กำลังอยู่ในระหว่างเข้าพัก \"\n      : \"เช็คเอาท์เรียบร้อยแล้ว \";\n    return Buttonname;\n  }\n  const handleClick = (param) => {\n    setOpen(true);\n    setRandomNumber(param);\n  };\n\n  // Add a function to handle selecting a Room Name\n  const handleSelectRoom = (value) => {\n    setSelectedRoom(value);\n  };\n\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const statusclick = (status, id_booking) => {\n    if (status === 0) {\n      Swal.fire({\n        title: \"สถานะห้องเช็คเอาท์ไปแล้ว\",\n        icon: \"info\",\n      });\n    } else {\n      Swal.fire({\n        title: \"ต้องการเช็คเอาท์หรือไม่?\",\n        text: \"ต้องการเช็คเอาท์รหัสการจองที่ : \" + id_booking + \" หรือไม่\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"checkout\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          const status_room_update = {\n            id_booking: id_booking,\n          };\n          instance\n            .put(\"update_booking_status\", status_room_update)\n            .then((response) => {\n              if (response.data.status === \"ok\") {\n                Swal.fire(\n                  \"เช็คเอาท์เรียบร้อยแล้ว!\",\n                  \"ห้องนี้ได้เช็คเอาท์แล้ว\",\n                  \"success\"\n                );\n                setTimeout(function () {\n                  navigate(0);\n                }, 1000);\n              } else {\n                Swal.fire(\"เกิดข้อผิดพลาด!\", \"ผิดพลาด\", \"warning\");\n                setTimeout(function () {\n                  navigate(0);\n                }, 1000);\n              }\n            });\n        }\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div style={{ display: \"flex\", alignItems: \"center\" ,padding:10}}>\n        <label htmlFor=\"room-select\">Select Room Name:</label>\n        <select\n          id=\"room-select\"\n          value={selectedRoom}\n          onChange={(e) => handleSelectRoom(e.target.value)}\n          style={{ marginRight: \"10px\" }}\n        >\n          <option value=\"\">All Rooms</option>\n          {type.map((room) => (\n            <option key={room.id} value={room.path}>\n              {room.nameroom}\n            </option>\n          ))}\n        </select>\n        <TextField\n          label=\"Search by ID Booking or Email User\"\n          value={searchTerm}\n          onChange={handleSearch}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n          style={{ width: '320px' }}\n        />\n      </div>\n\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID_Booking</TableCell>\n            <TableCell>ID_Room</TableCell>\n            <TableCell>Room_Name</TableCell>\n            <TableCell>Email_User</TableCell>\n            <TableCell sx={{ pr: 8 }}>Check_in</TableCell>\n            <TableCell sx={{ pr: 8 }}>Check_out</TableCell>\n            <TableCell>Price Total</TableCell>\n            <TableCell sx={{ pr: 10 }}>Status_Room</TableCell>\n            <TableCell sx={{ pr: 10 }}>password</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows\n            .filter((row) => {\n              // If no Room Name is selected, show all rows\n              if (selectedRoom === \"\") {\n                return true;\n              }\n              // Otherwise, only show rows with the selected Room Name\n              return row.room_name === selectedRoom;\n            })\n            .filter((row) => {\n              // If no search term is entered, show all rows\n              if (searchTerm === \"\") {\n                return true;\n              }\n              // Otherwise, filter rows by the search term\n              const lowerSearchTerm = searchTerm.toLowerCase();\n              return (\n                row.id_booking\n                  .toString()\n                  .toLowerCase()\n                  .includes(lowerSearchTerm) ||\n                row.email_user.toLowerCase().includes(lowerSearchTerm)\n              );\n            })\n            .map((row) => (\n              <TableRow key={row.id_booking}>\n                <TableCell>{row.id_booking}</TableCell>\n                <TableCell>{row.id_room}</TableCell>\n                <TableCell>{row.room_name}</TableCell>\n                <TableCell>{row.email_user}</TableCell>\n                <TableCell>\n                  {format(new Date(row.checkin), \"eee dd/MM/yyyy\")}\n                </TableCell>\n                <TableCell>\n                  {format(new Date(row.checkout), \"eee dd/MM/yyyy\")}\n                </TableCell>\n                <TableCell>{row.price_total}</TableCell>\n                <TableCell\n                  style={{ color: check(row.status_room) }}\n                  onClick={() => statusclick(row.status_room, row.id_booking)}\n                >\n                  {check1(row.status_room)}\n                </TableCell>\n                <TableCell>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    sx={{ borderRadius: 5 }}\n                    onClick={() => handleClick(row.password_room)}\n                  >\n                    ดูรหัสผ่านห้อง\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={style_}>\n          <Typography variant=\"h6\" component=\"h2\">\n            password is = {randomNumber}\n          </Typography>\n          <QRCode value={randomNumber} />\n        </Box>\n      </Modal>\n      <style>{`\n        table {\n          border-collapse: separate;\n          border-spacing: 0;\n          min-width: 800px;\n          width: 100%;\n        }\n        th {\n          background-color: #f5f5f5;\n          border: 1px solid #ddd;\n          font-weight: bold;\n          padding: 10px;\n          text-align: left;\n        }\n        td {\n          border: 1px solid #ddd;\n          padding: 10px;\n        }\n        tr:nth-child(even) td {\n          background-color: #f5f5f5;\n        }\n        tr:hover td {\n          background-color: #fafafa;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n// import Link from \"@mui/material/Link\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport Modal from \"@mui/material/Modal\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Button } from \"@mui/material\";\nimport instance from \"../axios.create\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Box } from \"@mui/system\";\nimport TextField from \"@mui/material/TextField\";\nimport Swal from \"sweetalert2\";\nimport { useNavigate } from \"react-router-dom\";\nimport Switch from \"@mui/material/Switch\";\n\nconst style_ = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 4,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport default function Roomdata() {\n  document.title = 'Room list';\n\n  const navigate = useNavigate();\n\n  const [rows, setrows] = useState([]);\n  const [type, settype] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [addon, setaddon] = useState(false);\n\n  const handleClose = () => setOpen(false);\n\n  const [ID_Room, setID_Room] = useState(\"\");\n  const [Room_Name, setRoom_Name] = useState(\"\");\n  const [Detill_Room, setDetill_Room] = useState(\"\");\n  const [Price_Room, setPrice_Room] = useState(\"\");\n  const [ID_Type, setID_Type] = useState(\"\");\n\n  useEffect(() => {\n    instance.post(\"room_lsit\").then((response) => {\n      setrows(response.data);\n    });\n    instance.get(\"typeroom\").then((response) => {\n      settype(response.data);\n    });\n  }, []);\n  const handleClick = (id, name, detill, price, type) => {\n    setOpen(true);\n    setaddon(false);\n    setID_Room(id);\n    setRoom_Name(name);\n    setDetill_Room(detill);\n    setPrice_Room(price);\n    setID_Type(type);\n  };\n\n  const deleteClick = (id) => {\n    Swal.fire({\n      title: \"คุณต้องการที่จะลบใช่ไหม\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"ใช่ ต้องการลบ\",\n      cancelButtonText: \"ไม่ใช่ ไม่ต้องการลบ\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        instance.delete(`delete_room/${id}`).then((response) => {\n          if (response.data.status === \"ok\") {\n            Swal.fire({\n              title: \"Delete Room Success\",\n              icon: \"success\",\n            });\n            setTimeout(function () {\n              navigate(0);\n            }, 1000);\n          }\n        });\n      }\n    });\n  };\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\n\n  // Add a function to handle selecting a Room Name\n  const handleSelectRoom = (id) => {\n    setSelectedRoom(id);\n  };\n\n  const status = (status) => {\n    if (status === 0) {\n      return false\n    }\n    if (status === 1) {\n     return true\n    }\n  };\n\n  const Clickaddroom = (temp) => {\n    if (temp === 1) {\n      setaddon(true);\n      setOpen(true);\n      setID_Room(\"\");\n      setRoom_Name(\"\");\n      setDetill_Room(\"\");\n      setPrice_Room(\"\");\n      setID_Type(1);\n    } else if (temp === 2) {\n      setOpen(false);\n      const JsonData = {\n        name_room: Room_Name,\n        detill_room: Detill_Room,\n        price: Price_Room,\n        id_type: ID_Type,\n      };\n      instance.post(\"add_room\", JsonData).then((response) => {\n        if (response.data.status === \"ok\") {\n          Swal.fire({\n            title: \"Add Room Success\",\n            icon: \"success\",\n            showConfirmButton: false,\n          });\n          setTimeout(function () {\n            navigate(0);\n          }, 1000);\n        }\n      });\n    }\n  };\n\n  const Clickupdate = () => {\n    setOpen(false);\n    const update_room = {\n      id_room: ID_Room,\n      name_room: Room_Name,\n      detill_room: Detill_Room,\n      price: Price_Room,\n      id_type: ID_Type,\n    };\n    instance.put(\"update_room\", update_room).then((response) => {\n      if (response.data.status === \"ok\") {\n        Swal.fire({\n          title: \"Update Success\",\n          icon: \"success\",\n          showConfirmButton: false,\n        });\n        setTimeout(function () {\n          navigate(0);\n        }, 1000);\n      }\n    });\n  };\n  return (\n    <React.Fragment>\n      <Box\n        sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n        onClick={() => {\n          Clickaddroom(1);\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"success\"\n          sx={{ borderRadius: 5 }}\n          // onClick={() => handleClick(row.password_room)}\n        >\n          เพิ่มห้อง\n        </Button>\n      </Box>\n      <div>\n        <label htmlFor=\"room-select\">Select Room Name:</label>\n        <select\n          id=\"room-select\"\n          value={selectedRoom}\n          onChange={(e) => handleSelectRoom(e.target.value)}\n        >\n          <option value=\"\">All Rooms</option>\n          {type.map((room) => (\n            <option key={room.id} value={room.id}>\n              {room.nameroom}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID_Room</TableCell>\n            <TableCell sx={{ pr: 13 }}>Room_Name</TableCell>\n            <TableCell>Detill_Room</TableCell>\n            <TableCell>Price_Room</TableCell>\n            <TableCell>ID_Type</TableCell>\n            <TableCell>Edit</TableCell>\n            <TableCell>Delete</TableCell>\n            <TableCell>Light status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows\n            .filter((row) => {\n              // If no Room Name is selected, show all rows\n              if (selectedRoom === \"\") {\n                return true;\n              }\n              // Otherwise, only show rows with the selected Room Name\n              return row.id_type.toString() === selectedRoom;\n            })\n            .map((row) => (\n              <TableRow key={row.id_room}>\n                <TableCell>{row.id_room}</TableCell>\n                <TableCell>{row.name_room}</TableCell>\n                <TableCell>{row.detill_room}</TableCell>\n                <TableCell>{row.price}</TableCell>\n                <TableCell>{row.id_type}</TableCell>\n                <TableCell>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    sx={{ borderRadius: 5 }}\n                    onClick={() =>\n                      handleClick(\n                        row.id_room,\n                        row.name_room,\n                        row.detill_room,\n                        row.price,\n                        row.id_type\n                      )\n                    }\n                  >\n                    แก้ไข\n                  </Button>\n                </TableCell>\n                <TableCell>\n                  <Button\n                    variant=\"contained\"\n                    color=\"error\"\n                    sx={{ borderRadius: 5 }}\n                    endIcon={<DeleteIcon />}\n                    onClick={() => deleteClick(row.id_room)}\n                  >\n                    ลบ\n                  </Button>\n                </TableCell>\n                <TableCell>\n                <Switch checked={status(row.light_status)}\n/>\n\n                </TableCell>\n              </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={style_}>\n          <TextField\n            id=\"room_name\"\n            label=\"room_name\"\n            value={Room_Name}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            onChange={(e) => setRoom_Name(e.target.value)}\n          />\n\n          <TextField\n            id=\"detill_Room\"\n            label=\"detill_Room\"\n            value={Detill_Room}\n            variant=\"outlined\"\n            margin=\"normal\"\n            multiline\n            rows={4}\n            fullWidth\n            required\n            onChange={(e) => setDetill_Room(e.target.value)}\n          />\n          <TextField\n            id=\"price_room\"\n            label=\"price_room\"\n            value={Price_Room}\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            required\n            onChange={(e) => setPrice_Room(e.target.value)}\n          />\n          <div>\n            <label htmlFor=\"room-select\">Select Room Name:</label>\n            <select\n              id=\"room-select\"\n              value={ID_Type}\n              onChange={(e) => setID_Type(e.target.value)}\n            >\n              {type.map((room) => (\n                <option key={room.id} value={room.id}>\n                  {room.nameroom}\n                </option>\n              ))}\n            </select>\n          </div>\n          <TextField\n            id=\"id_type\"\n            label=\"id_type\"\n            value={ID_Type}\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            required\n            onChange={(e) => setID_Type(e.target.value)}\n            disabled={true}\n          />\n          <Box>\n            {!addon && (\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                sx={{ borderRadius: 5, mr: 5 }}\n                onClick={() => {\n                  Clickupdate();\n                }}\n              >\n                แก้ไข\n              </Button>\n            )}\n            {addon && (\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                sx={{ borderRadius: 5, mr: 5 }}\n                onClick={() => {\n                  Clickaddroom(2);\n                }}\n              >\n                เพิ่มห้อง\n              </Button>\n            )}\n\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              sx={{ borderRadius: 5 }}\n              onClick={() => setOpen(false)}\n            >\n              ยกเลิก\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n      <style>{`\n        table {\n          border-collapse: separate;\n          border-spacing: 0;\n          min-width: 800px;\n          width: 100%;\n        }\n        th {\n          background-color: #f5f5f5;\n          border: 1px solid #ddd;\n          font-weight: bold;\n          padding: 10px;\n          text-align: left;\n        }\n        td {\n          border: 1px solid #ddd;\n          padding: 10px;\n        }\n        tr:nth-child(even) td {\n          background-color: #f5f5f5;\n        }\n        tr:hover td {\n          background-color: #fafafa;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n// import Link from \"@mui/material/Link\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport Modal from \"@mui/material/Modal\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Button } from \"@mui/material\";\nimport instance from \"../axios.create\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Box } from \"@mui/system\";\nimport TextField from \"@mui/material/TextField\";\nimport Swal from \"sweetalert2\";\nimport { useNavigate  } from \"react-router-dom\";\n\nconst style_ = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 4,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport default function Roomdata() {\n  document.title = 'Type Room';\n\n  const navigate = useNavigate ();\n\n  const [type, settype] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [addon, setaddon] = useState(false);\n\n  const handleClose = () => setOpen(false);\n\n  const [ID_Type, setID_Type] = useState(\"\");\n  const [Type_Name, setType_Name] = useState(\"\");\n  const [Detill_Type, setDetill_Type] = useState(\"\");\n  const [Path_Type, setPath_Type] = useState(\"\");\n\n  useEffect(() => {\n    instance.get(\"typeroom\").then((response) => {\n      settype(response.data);\n    });\n  }, []);\n  const handleClick = (id, name, title, path) => {\n    setOpen(true);\n    setaddon(false);\n\n    setID_Type(id);\n    setType_Name(name);\n    setDetill_Type(title);\n    setPath_Type(path);\n  };\n\n  const deleteClick = (id) => {\n    Swal.fire({\n      title: 'คุณต้องการที่จะลบใช่ไหม',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'ใช่ ต้องการลบ',\n      cancelButtonText: 'ไม่ใช่ ไม่ต้องการลบ'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        instance.delete(`delete_typeroom/${id}`).then((response) => {\n          if (response.data.status === \"ok\") {\n            Swal.fire({\n              title: \"Delete Type Room Success\",\n              icon: \"success\",\n              showConfirmButton: false,\n            });\n            setTimeout(function () {\n              navigate(0);\n            }, 1000);\n          }\n        });\n      }\n    })\n   \n  };\n\n  const Clickadd = (temp) => {\n    if (temp === 1) {\n      setaddon(true);\n      setOpen(true);\n\n      setID_Type(\"\");\n      setType_Name(\"\");\n      setDetill_Type(\"\");\n      setPath_Type(\"\");\n    } else if (temp === 2) {\n      setOpen(false);\n      const JsonData = {\n        nameroom: Type_Name,\n        title: Detill_Type,\n        path: Path_Type,\n      };\n      instance.post(\"add_typeroom\", JsonData).then((response) => {\n        if (response.data.status === \"ok\") {\n          Swal.fire({\n            title: \"Add Type Room Success\",\n            icon: \"success\",\n            showConfirmButton: false,\n          });\n          setTimeout(function () {\n            navigate(0);\n          }, 1000);\n        }\n      });\n    }\n  };\n\n  const Clickupdate = () => {\n    setOpen(false);\n    const update_room = {\n      id: ID_Type,\n      nameroom: Type_Name,\n      title: Detill_Type,\n      path: Path_Type,\n    };\n    instance.put(\"update_type\", update_room).then((response) => {\n      if (response.data.status === \"ok\") {\n        Swal.fire({\n          title: \"Update Type Room Success\",\n          icon: \"success\",\n          showConfirmButton: false,\n        });\n        setTimeout(function () {\n          navigate(0);\n        }, 1000);\n      }\n    });\n  };\n  return (\n    <React.Fragment>\n      <Box\n        sx={{ display: \"flex\", justifyContent: \"flex-end\", p: 2 }}\n        onClick={() => {\n          Clickadd(1);\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"success\"\n          sx={{ borderRadius: 5 }}\n          // onClick={() => handleClick(row.password_room)}\n        >\n          เพิ่มประเภทห้อง\n        </Button>\n      </Box>\n\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID_Room</TableCell>\n            <TableCell sx={{ pr: 13 }}>Type_Name</TableCell>\n            <TableCell>Detill_Type</TableCell>\n            <TableCell>Path</TableCell>\n            <TableCell>Edit</TableCell>\n            <TableCell>Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {type.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.id}</TableCell>\n              <TableCell>{row.nameroom}</TableCell>\n              <TableCell>{row.title}</TableCell>\n              <TableCell>{row.path}</TableCell>\n              <TableCell>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  sx={{ borderRadius: 5 }}\n                  onClick={() =>\n                    handleClick(row.id, row.nameroom, row.title, row.path)\n                  }\n                >\n                  แก้ไข\n                </Button>\n              </TableCell>\n              <TableCell>\n                <Button\n                  variant=\"contained\"\n                  color=\"error\"\n                  sx={{ borderRadius: 5 }}\n                  endIcon={<DeleteIcon />}\n                  onClick={() => deleteClick(row.id)}\n                >\n                  ลบ\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={style_}>\n          <TextField\n            id=\"Type_Name\"\n            label=\"Type_Name\"\n            value={Type_Name}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            onChange={(e) => setType_Name(e.target.value)}\n          />\n\n          <TextField\n            id=\"Detill_Type\"\n            label=\"Detill_Type\"\n            value={Detill_Type}\n            variant=\"outlined\"\n            margin=\"normal\"\n            multiline\n            rows={4}\n            fullWidth\n            required\n            onChange={(e) => setDetill_Type(e.target.value)}\n          />\n          <TextField\n            id=\"Path_Type\"\n            label=\"Path_Type\"\n            value={Path_Type}\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            required\n            onChange={(e) => setPath_Type(e.target.value)}\n          />\n          <Box>\n            {!addon && (\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                sx={{ borderRadius: 5, mr: 5 }}\n                onClick={() => {\n                  Clickupdate();\n                }}\n              >\n                แก้ไข\n              </Button>\n            )}\n            {addon && (\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                sx={{ borderRadius: 5, mr: 5 }}\n                onClick={() => {\n                  Clickadd(2);\n                }}\n              >\n                เพิ่มห้อง\n              </Button>\n            )}\n\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              sx={{ borderRadius: 5 }}\n              onClick={() => setOpen(false)}\n            >\n              ยกเลิก\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n      <style>{`\n        table {\n          border-collapse: separate;\n          border-spacing: 0;\n          min-width: 800px;\n          width: 100%;\n        }\n        th {\n          background-color: #f5f5f5;\n          border: 1px solid #ddd;\n          font-weight: bold;\n          padding: 10px;\n          text-align: left;\n        }\n        td {\n          border: 1px solid #ddd;\n          padding: 10px;\n        }\n        tr:nth-child(even) td {\n          background-color: #f5f5f5;\n        }\n        tr:hover td {\n          background-color: #fafafa;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n// import Link from \"@mui/material/Link\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport Modal from \"@mui/material/Modal\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Button } from \"@mui/material\";\nimport instance from \"../axios.create\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Box } from \"@mui/system\";\nimport TextField from \"@mui/material/TextField\";\nimport Swal from \"sweetalert2\";\nimport { useNavigate  } from \"react-router-dom\";\n\nconst style_ = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 4,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport default function Roomdata() {\n  document.title = 'Employee List';\n\n  const navigate = useNavigate ();\n\n  const [rows, setrows] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [addon, setaddon] = useState(false);\n\n  const handleClose = () => setOpen(false);\n\n  const [id, setid] = useState(\"\");\n  const [idcard, setIdcard] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [tel, setTel] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    instance.post(\"employee_lsit\").then((response) => {\n      setrows(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  const handleClick = (id_, idcard_, name_, lastname_, email_, tel_) => {\n    setOpen(true);\n    setaddon(false);\n\n    setid(id_);\n    setIdcard(idcard_);\n    setName(name_);\n    setLastname(lastname_);\n    setEmail(email_);\n    setTel(tel_);\n  };\n\n  const deleteClick = (id) => {\n    Swal.fire({\n      title: \"คุณต้องการที่จะลบใช่ไหม\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"ใช่ ต้องการลบ\",\n      cancelButtonText: \"ไม่ใช่ ไม่ต้องการลบ\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        instance.delete(`delete_employee/${id}`).then((response) => {\n          if (response.data.status === \"ok\") {\n            Swal.fire({\n              title: \"Delete Employee Success\",\n              icon: \"success\",\n              showConfirmButton: false,\n            });\n            setTimeout(function () {\n              navigate(0);\n            }, 1000);\n          }\n        });\n      }\n    });\n  };\n\n  const Clickadd = (temp) => {\n    if (temp === 1) {\n      setaddon(true);\n      setOpen(true);\n\n      setid(\"\");\n      setIdcard(\"\");\n      setName(\"\");\n      setLastname(\"\");\n      setEmail(\"\");\n      setTel(\"\");\n    } else if (temp === 2) {\n      setOpen(false);\n      const JsonData = {\n        idcard: idcard,\n        name: name,\n        lastname: lastname,\n        email: email,\n        tel: tel,\n        password: password,\n      };\n      instance.post(\"add_employee\", JsonData).then((response) => {\n        if (response.data.status === \"ok\") {\n          Swal.fire({\n            title: \"Add Employee Success\",\n            icon: \"success\",\n            showConfirmButton: false,\n          });\n          setTimeout(function () {\n            navigate(0);\n          }, 1000);\n        }\n      });\n    }\n  };\n\n  const Clickupdate = () => {\n    setOpen(false);\n    const update_room = {\n      id: id,\n      idcard: idcard,\n      name: name,\n      lastname: lastname,\n      email: email,\n      tel: tel,\n    };\n    instance.put(\"update_employee\", update_room).then((response) => {\n      if (response.data.status === \"ok\") {\n        Swal.fire({\n          title: \"Update Employee Success\",\n          icon: \"success\",\n          showConfirmButton: false,\n        });\n        setTimeout(function () {\n          navigate(0);\n        }, 1000);\n      }\n    });\n  };\n  return (\n    <React.Fragment>\n      <Box\n        sx={{ display: \"flex\", justifyContent: \"flex-end\", p: 2 }}\n        onClick={() => {\n          Clickadd(1);\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"success\"\n          sx={{ borderRadius: 5 }}\n          // onClick={() => handleClick(row.password_room)}\n        >\n          เพิ่มสมาชิก\n        </Button>\n      </Box>\n\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>ID Card</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Last Name</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Telephone</TableCell>\n            <TableCell>Edit</TableCell>\n            <TableCell>Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.id}</TableCell>\n              <TableCell>{row.idcard}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.lastname}</TableCell>\n              <TableCell>{row.email}</TableCell>\n              <TableCell>{row.tel}</TableCell>\n              <TableCell>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  sx={{ borderRadius: 5 }}\n                  onClick={() =>\n                    handleClick(row.id, row.idcard, row.name, row.lastname, row.email, row.tel)\n                  }\n                >\n                  แก้ไข\n                </Button>\n              </TableCell>\n              <TableCell>\n                <Button\n                  variant=\"contained\"\n                  color=\"error\"\n                  sx={{ borderRadius: 5 }}\n                  endIcon={<DeleteIcon />}\n                  onClick={() => deleteClick(row.id)}\n                >\n                  ลบ\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={style_}>\n          <TextField\n            id=\"idcard\"\n            label=\"idcard\"\n            value={idcard}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            onChange={(e) => setIdcard(e.target.value)}\n          />\n\n          <TextField\n            id=\"name\"\n            label=\"name\"\n            value={name}\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            required\n            onChange={(e) => setName(e.target.value)}\n          />\n          <TextField\n            id=\"lastname\"\n            label=\"lastname\"\n            value={lastname}\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            required\n            onChange={(e) => setLastname(e.target.value)}\n          />\n          <TextField\n            id=\"email\"\n            label=\"email\"\n            value={email}\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            required\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <TextField\n            id=\"tel\"\n            label=\"tel\"\n            value={tel}\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            required\n            onChange={(e) => setTel(e.target.value)}\n          />\n           {addon && (\n            <TextField\n              id=\"password\"\n              label=\"password\"\n              value={password}\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              required\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          )}\n          <Box>\n            {!addon && (\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                sx={{ borderRadius: 5, mr: 5 }}\n                onClick={() => {\n                  Clickupdate();\n                }}\n              >\n                แก้ไข\n              </Button>\n            )}\n            {addon && (\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                sx={{ borderRadius: 5, mr: 5 }}\n                onClick={() => {\n                  Clickadd(2);\n                }}\n              >\n                เพิ่มสมาชิก\n              </Button>\n            )}\n\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              sx={{ borderRadius: 5 }}\n              onClick={() => setOpen(false)}\n            >\n              ยกเลิก\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n      <style>{`\n        table {\n          border-collapse: separate;\n          border-spacing: 0;\n          min-width: 800px;\n          width: 100%;\n        }\n        th {\n          background-color: #f5f5f5;\n          border: 1px solid #ddd;\n          font-weight: bold;\n          padding: 10px;\n          text-align: left;\n        }\n        td {\n          border: 1px solid #ddd;\n          padding: 10px;\n        }\n        tr:nth-child(even) td {\n          background-color: #f5f5f5;\n        }\n        tr:hover td {\n          background-color: #fafafa;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport instance from \"../axios.create\";\nimport { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\";\nimport { DemoItem } from \"@mui/x-date-pickers/internals/demo\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport dayjs from \"dayjs\";\nimport { FormControl, Select, MenuItem } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport Swal from \"sweetalert2\";\nimport {\n  Button,\n  Box,\n  Typography,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Grid,\n} from \"@mui/material\";\nimport Room1 from \"../image/room1.jpg\";\nimport { useNavigate  } from \"react-router-dom\";\n\nconst color = \"#14274A\";\n\nexport default function Userdata() {\n  const navigate = useNavigate ();\n  const [rows, setrows] = useState([]);\n  const [selectedType, setSelectedType] = useState(\"\");\n  const [type, settype] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(dayjs(new Date()));\n  const [selectedDateout, setSelectedDateout] = useState();\n  const [show, setSelectedshow] = useState(false);\n\n  var tomorrow = new Date(selectedDate);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  const token = localStorage.getItem(\"token\");\n\n  useEffect(() => {\n    sessionStorage.setItem(\"checkout\", selectedDateout);\n    sessionStorage.setItem(\"checkin\", selectedDate);\n\n    \n    instance.get(\"typeroom\").then((response) => {\n      settype(response.data);\n\n    });\n  }, []);\n\n  function test() {\n    const T1 = new Date(selectedDate);\n    var count = 0;\n    while (T1 <= selectedDateout) {\n      T1.setDate(T1.getDate() + 1);\n      count++;\n    }\n    return count;\n  }\n  const handleSelectType = (id) => {\n    setSelectedType(id);\n    sessionStorage.setItem(\"nameroom\",type[id-1].path);\n    sessionStorage.setItem(\"id_Type\", id);\n\n  };\n\n  function handle() {\n    if (sessionStorage.getItem(\"checkout\") === \"undefined\") {\n      Swal.fire({\n        title: \"โปรดเลือกวันที่เข้าพัก\",\n        text: \"โปรดเลือกวันที่ Check in และ Check out\",\n        icon: \"warning\",\n        confirmButtonText: \"OK\",\n      });\n    } else if (selectedDateout <= selectedDate) {\n      Swal.fire({\n        title: \"โปรดเลือกวันที่พักใหม่\",\n        text: \"โปรดเลือกวันที่ Check out ใหม่\",\n        icon: \"warning\",\n        confirmButtonText: \"OK\",\n      });\n    } else if (selectedType === \"\") {\n      Swal.fire({\n        title: \"โปรดเลือกประเภทห้อง\",\n        icon: \"warning\",\n        confirmButtonText: \"OK\",\n      });\n    }else {\n      setSelectedshow(true);\n\n      const JsonData = {\n        id_Type: sessionStorage.getItem(\"id_Type\"),\n        nameroom: sessionStorage.getItem(\"nameroom\"),\n        checkin: sessionStorage.getItem(\"checkin\"),\n        checkout: sessionStorage.getItem(\"checkout\"),\n      };\n      instance.post(\"check\", JsonData).then((response) => {\n        setrows(response.data);\n      });\n    }\n  }\n  function check(temp) {\n    const checkStatus = temp;\n    const buttonColor = checkStatus ? \"error\" : \"success\";\n    return buttonColor;\n  }\n\n  function check1(temp, price) {\n    const checkStatus = temp;\n    const Buttonname = checkStatus\n      ? \"ห้องไม่ว่าง\"\n      : \"ห้องว่าง ราคา \" + price + \"/คืน\";\n    return Buttonname;\n  }\n\n  const handleClick = (param, id, price) => {\n    if (param === 1) {\n      Swal.fire({\n        title: \"ห้องไม่ว่าง\",\n        text: \"ห้องไม่ว่าง โปรดเลือกห้องใหม่\",\n        icon: \"warning\",\n        confirmButtonText: \"OK\",\n      });\n    } else {\n      if (token === null) {\n        Swal.fire({\n          title: \"ยังไม่ได้เข้าสู่ระบบ\",\n          text: \"โปรดเข้าสู่ระบบหรือสมัคสมาชิก\",\n          icon: \"warning\",\n          confirmButtonText: \"OK\",\n        });\n      } else if (selectedDateout <= selectedDate) {\n        Swal.fire({\n          title: \"โปรดเลือกวันที่พักใหม่\",\n          text: \"โปรดเลือกวันที่ Check out ใหม่\",\n          icon: \"warning\",\n          confirmButtonText: \"OK\",\n        });\n      } else {\n        sessionStorage.setItem(\"price\", price * test())\n        sessionStorage.setItem(\"roomkey\", id);\n        navigate('/dashboard/walk_check_in/5/1');\n      }\n    }\n  };\n  return (\n    <React.Fragment>\n      <Box\n        sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\n      >\n        <FormControl sx={{  mr: 5, minWidth: 200 }}>\n        <DemoItem label=\"เลือกประเภทห้อง\">\n          <Select\n            id=\"room-select\"\n            value={selectedType}\n            onChange={(e) => handleSelectType(e.target.value)}\n          >\n            {type.map((room) => (\n              <MenuItem key={room.id} value={room.id}>\n                {room.nameroom}\n              </MenuItem>\n            ))}\n          </Select>\n          </DemoItem>\n\n        </FormControl>\n        <LocalizationProvider dateAdapter={AdapterDayjs} adapterLocale={\"th\"}>\n          <DemoItem label=\"เลือกวันเข้าพัก\">\n            <MobileDatePicker\n              minDate={dayjs(new Date())}\n              onChange={(date) => {\n                setSelectedDate(date);\n                const test = new Date(date);\n                sessionStorage.setItem(\"checkin\", test);\n              }}\n              value={selectedDate}\n              sx={{ pr: 1 }}\n            />\n          </DemoItem>\n          <DemoItem label=\"เลือกวันที่ออกจากที่พัก\">\n            <MobileDatePicker\n              minDate={dayjs(tomorrow)}\n              onChange={(date) => {\n                const test = new Date(date);\n                // test.setDate(test.getDate() + 1);\n                setSelectedDateout(test);\n                sessionStorage.setItem(\"checkout\", test);\n              }}\n            />\n          </DemoItem>\n          <Button\n            variant=\"contained\"\n            startIcon={<SearchIcon />}\n            sx={{ height: \"100%\", ml: 1, borderRadius: 5, mt: 3 }}\n            onClick={handle}\n          >\n            Search\n          </Button>\n        </LocalizationProvider>\n      </Box>\n      <Grid\n            container\n            spacing={4}\n            sx={{\n              pt: 5,\n            }}\n          >\n          {show === false ? \"\" :  rows.map((row) => (\n              <Grid item key={row.id_room} xs={12} sm={6} md={4}>\n                <Card\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                  }}\n                >\n                  <CardMedia component=\"img\" image={Room1} alt=\"random\" />\n                  <CardContent\n                    sx={{\n                      flexGrow: 1,\n                      bgcolor: color,\n                      textAlign: \"center\",\n                      color: \"#f0f0f0\",\n                    }}\n                  >\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                      {row.name_room}\n                    </Typography>\n                  </CardContent>\n                  <CardContent>\n                    <Typography variant=\"subtitle1\">{row.detill_room}</Typography>\n                  </CardContent>\n                  <CardActions disableSpacing>\n                    <Button\n                      variant=\"contained\"\n                      color={check(row.status)}\n                      onClick={() => handleClick(row.status, row.id_room, row.price)}\n                    >\n                      {check1(row.status, row.price)}\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}     \n            \n           \n          </Grid>\n          \n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Box, Grid } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Userdata() {\n  sessionStorage.removeItem(\"User_data\");\n  const navigate = useNavigate();\n\n  const [error, setError] = useState(null);\n\n  useEffect(() => {}, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const data = new FormData(event.currentTarget);\n\n    const JsonData = {\n      id: data.get(\"id\"),\n      name: data.get(\"firstName\"),\n      lastname: data.get(\"lastName\"),\n      email: data.get(\"email\"),\n      tel: data.get(\"tel\"),\n    };\n\n    // Check if any required fields are empty\n    if (!JsonData.id || !JsonData.name || !JsonData.lastname || !JsonData.email || !JsonData.tel) {\n      setError(\"Please fill in all required fields.\");\n      return;\n    }\n\n    const data_set = JSON.stringify(JsonData);\n    sessionStorage.setItem(\"User_data\", data_set);\n\n    navigate(\"/dashboard/walk_check_in/5/2\");\n  };\n\n  return (\n    <React.Fragment>\n      <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              id=\"id\"\n              label=\"ID Card number\"\n              name=\"id\"\n              autoComplete=\"id\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              autoComplete=\"given-name\"\n              name=\"firstName\"\n              required\n              fullWidth\n              id=\"firstName\"\n              label=\"First Name\"\n              autoFocus\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              fullWidth\n              id=\"lastName\"\n              label=\"Last Name\"\n              name=\"lastName\"\n              autoComplete=\"family-name\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              id=\"tel\"\n              label=\"telophone\"\n              name=\"tel\"\n              autoComplete=\"tel\"\n            />\n          </Grid>\n        </Grid>\n        {error && (\n          <p style={{ color: \"red\", marginTop: \"10px\" }}>{error}</p>\n        )}\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          ยืนยันข้อมูล\n        </Button>\n      </Box>\n    </React.Fragment>\n  );\n}\n","import Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { CardActionArea } from \"@mui/material\";\nimport Room1 from \"../image/room1.jpg\";\nimport React, { useEffect, useState } from \"react\";\nimport instance from \"../axios.create\";\nimport { format } from \"date-fns\";\n\n\nexport default function Roomdetail() {\n  const [rows, setrows] = useState([]);\n\n  // const nameroom = sessionStorage.getItem('nameroom');\n  // const roomkey = sessionStorage.getItem('roomkey');\n  const checkin = new Date(sessionStorage.getItem(\"checkin\"));\n  const checkout = new Date(sessionStorage.getItem(\"checkout\"));\n  const data_user = JSON.parse(sessionStorage.getItem(\"User_data\"));\n\n  \n  useEffect(() => {\n    const dataJson = {\n      id_Type: sessionStorage.getItem(\"id_Type\"),\n      roomkey: sessionStorage.getItem(\"roomkey\"),\n    };\n    instance.post(\"payroom\", dataJson).then((response) => {\n      setrows(response.data);\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      {rows.map((row) => (\n        <Card\n          key={row.id_room}\n          variant=\"outlined\"\n          sx={{\n            height: \"50%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image={Room1}\n              alt=\"green iguana\"\n            />\n\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {row.name_room}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {row.detill_room}\n              </Typography>\n              <Typography level=\"body3\" sx={{ py: 2 }}>\n                Check in : {format(new Date(checkin), \"eee dd/MM/yyyy\")}\n              </Typography>\n              <Typography level=\"body3\" sx={{ py: 1 }}>\n                Check out : {format(new Date(checkout), \"eee dd/MM/yyyy\")}\n              </Typography>\n              <Typography level=\"body3\" sx={{ py: 1 }}>\n                Price Total {sessionStorage.getItem(\"price\")}\n              </Typography>\n              <Typography level=\"body3\" sx={{ py: 1 }}>\n                Name User: {data_user.name} {\" \"} {data_user.lastname}\n              </Typography>\n              <Typography level=\"body3\" sx={{ py: 1 }}>\n                Email User {data_user.email}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      ))}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport QRCode from \"qrcode.react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport default function Userdata() {\n  const phoneNumber = \"097-265-4762\";\n  const amount = parseInt(sessionStorage.getItem(\"price\"));\n  const [qrCode, setqrCode] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    handleQR();\n    setTimeout(() => {\n      setIsLoading(true);\n      setTimeout(() => {\n        Swal.fire({\n          icon: \"success\",\n          title: \"Payment success!!\",\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }, 2000);\n    }, 2000);\n  }, []);\n\n  const generatePayload = require(\"promptpay-qr\");\n  function LoadingScreen() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <CircularProgress />\n      </div>\n    );\n  }\n\n  function handleQR() {\n    setqrCode(generatePayload(phoneNumber, { amount }));\n  }\n  return (\n    <React.Fragment>\n    \n        {!isLoading && (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <p>Price total : {amount}</p>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <QRCode value={qrCode} />\n            </div>\n          </>\n        )}\n\n        {isLoading && <LoadingScreen />}\n    </React.Fragment>\n  );\n}\n","import Typography from \"@mui/material/Typography\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { CardActionArea } from \"@mui/material\";\nimport Room1 from \"../image/room1.jpg\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport instance from \"../axios.create\";\nimport { format } from \"date-fns\";\nimport QRCode from \"qrcode.react\";\nimport Swal from 'sweetalert2'\n\nexport default function Roomdetail() {\n  const [rows, setrows] = useState([]);\n  const dataFetchedRef = useRef(false);\n\n  // const nameroom = sessionStorage.getItem('nameroom');\n  // const roomkey = sessionStorage.getItem('roomkey');\n  const checkin = new Date(sessionStorage.getItem(\"checkin\"));\n  const checkout = new Date(sessionStorage.getItem(\"checkout\"));\n  const data_user = JSON.parse(sessionStorage.getItem(\"User_data\"));\n  const [randomNumber, setRandomNumber] = useState(\"\");\n\n  \n  useEffect(() => {\n    const dataJson = {\n      id_Type: sessionStorage.getItem(\"id_Type\"),\n      roomkey: sessionStorage.getItem(\"roomkey\"),\n    };\n    instance.post(\"payroom\", dataJson).then((response) => {\n      setrows(response.data);\n    });\n    if (dataFetchedRef.current) return;\n    dataFetchedRef.current = true;\n    insert();\n  }, []);\n\n  function insert() {\n    const newNumber = Math.floor(Math.random() * 100000);\n    setRandomNumber(newNumber.toString().padStart(5, \"0\"));\n    const password_room = newNumber.toString().padStart(5, \"0\");\n   \n          const JsonData = {\n            email: \"walkin.\"+data_user.email,\n            nameroom: sessionStorage.getItem(\"nameroom\"),\n            id_room: sessionStorage.getItem(\"roomkey\"),\n            checkin: sessionStorage.getItem(\"checkin\"),\n            checkout: sessionStorage.getItem(\"checkout\"),\n            price_total: sessionStorage.getItem(\"price\"),\n            password_room: password_room,\n            status_room: 1,\n          };\n          instance.post(\"booking\", JsonData).then((response) => {\n            if (response.data.status === true) {\n              instance.post(\"user_Walkin\", data_user).then((res) => {\n                if (res.data.status === \"ok\") {\n                  Swal.fire({\n                    title: 'Booking success',\n                    icon: 'success',\n                  })\n                } else {\n                  Swal.fire({\n                    title: 'Update User walking failed',\n                    icon: 'error',\n                    confirmButtonText: 'OK'\n                  })\n                }\n              });\n            } else {\n              Swal.fire({\n                title: 'Booking failed',\n                icon: 'error',\n                confirmButtonText: 'OK'\n              })\n            }\n          });\n       \n          // });\n        \n     \n  }\n  return (\n    <React.Fragment>\n      {rows.map((row) => (\n        <Card\n          key={row.id_room}\n          variant=\"outlined\"\n          sx={{\n            height: \"50%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <CardActionArea>\n            <CardMedia\n              component=\"img\"\n              height=\"140\"\n              image={Room1}\n              alt=\"green iguana\"\n            />\n\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"div\">\n                {row.name_room}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {row.detill_room}\n              </Typography>\n              <Typography level=\"body3\" sx={{ py: 2 }}>\n                Check in : {format(new Date(checkin), \"eee dd/MM/yyyy\")}\n              </Typography>\n              <Typography level=\"body3\" sx={{ py: 1 }}>\n                Check out : {format(new Date(checkout), \"eee dd/MM/yyyy\")}\n              </Typography>\n              <Typography level=\"body3\" sx={{ py: 1 }}>\n                Price Total {sessionStorage.getItem(\"price\")}\n              </Typography>\n              <Typography level=\"body3\" sx={{ py: 1 }}>\n                Name User: {data_user.name} {\" \"} {data_user.lastname}\n              </Typography>\n              <Typography level=\"body3\" sx={{ py: 1 }}>\n                Email User {data_user.email}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Card>\n      ))}\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <p>Room Password : {randomNumber}</p>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <QRCode value={randomNumber} />\n      </div>\n    </React.Fragment>\n  );\n}\n","import * as React from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport Typography from \"@mui/material/Typography\";\nimport Wlakin1 from \"./Walkin1\";\nimport Walkin2 from \"./Walkin2\";\nimport Walkin3 from \"./Walkin3\";\nimport Walkin4 from \"./Walkin4\";\nimport Walkin5 from \"./Walkin5\";\n\nimport Paper from \"@mui/material/Paper\";\nimport Container from \"@mui/material/Container\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst steps = [\n  \"เลือกห้องและวัน\",\n  \"กรอกรายละเอียด\",\n  \"รายละเอียด\",\n  \"ชำระเงิน\",\n  \"เสร็จสิ้น\",\n];\nconst stepContentMap = {\n  0: <Wlakin1 />,\n  1: <Walkin2 />,\n  2: <Walkin3 />,\n  3: <Walkin4 />,\n  4: <Walkin5 />,\n};\nexport default function Userdata() {\n  document.title = 'Walking Check in';\n\n  const { atId } = useParams();\n  const navigate = useNavigate();\n\n  const handleNext = () => {\n    // setActiveStep(activeStep + 1);\n    navigate(`/dashboard/walk_check_in/5/${parseInt(atId) + 1}`);\n  };\n\n  const handleBack = () => {\n    // setActiveStep(activeStep - 1);\n    navigate(`/dashboard/walk_check_in/5/${parseInt(atId) - 1}`);\n  };\n\n  return (\n    <React.Fragment>\n      <Container sx={{ py: 1 }} maxWidth=\"md\">\n        <Container component=\"main\" maxWidth=\"xl\" sx={{ mb: 4 }}>\n          <Paper\n            variant=\"outlined\"\n            sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}\n          >\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n              ระบบจองห้อง\n            </Typography>\n            <Stepper activeStep={parseInt(atId)} sx={{ pt: 3, pb: 5 }}>\n              {steps.map((label) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n            {parseInt(atId) === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. We have emailed your order\n                  confirmation, and will send you an update when your order has\n                  shipped.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {stepContentMap[atId]}\n                <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n                  {parseInt(atId) !== 0 && (\n                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\n                      Back\n                    </Button>\n                  )}\n                  {parseInt(atId) >= 2 && (\n                    <Button\n                      variant=\"contained\"\n                      onClick={handleNext}\n                      sx={{ mt: 3, ml: 1 }}\n                    >\n                      {parseInt(atId) === steps.length - 1\n                        ? \"เสร็จสิ้น\"\n                        : \"Next\"}\n                    </Button>\n                  )}\n                </Box>\n              </React.Fragment>\n            )}\n          </Paper>\n        </Container>\n      </Container>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n// import Link from \"@mui/material/Link\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport Modal from \"@mui/material/Modal\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { Button } from \"@mui/material\";\nimport instance from \"../axios.create\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Box } from \"@mui/system\";\nimport TextField from \"@mui/material/TextField\";\nimport Swal from \"sweetalert2\";\nimport { useNavigate  } from \"react-router-dom\";\n\nconst style_ = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 4,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport default function Roomdata() {\n  document.title = 'Info List';\n\n  const navigate = useNavigate ();\n\n  const [type, settype] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [addon, setaddon] = useState(false);\n\n  const handleClose = () => setOpen(false);\n  const [ID_Info, setID_Info] = useState(\"\");\n  const [heading, setheading] = useState(\"\");\n  const [Detill, setDetill] = useState(\"\");\n\n  useEffect(() => {\n    instance.post(\"info_lsit\").then((response) => {\n      settype(response.data);\n    });\n  }, []);\n  const handleClick = (id, name, title) => {\n    setOpen(true);\n    setaddon(false);\n\n    setID_Info(id);\n    setheading(name);\n    setDetill(title);\n  };\n\n  const deleteClick = (id) => {\n    Swal.fire({\n      title: 'คุณต้องการที่จะลบใช่ไหม',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'ใช่ ต้องการลบ',\n      cancelButtonText: 'ไม่ใช่ ไม่ต้องการลบ'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        instance.delete(`delete_info/${id}`).then((response) => {\n          if (response.data.status === \"ok\") {\n            Swal.fire({\n              title: \"Delete Type Room Success\",\n              icon: \"success\",\n              showConfirmButton: false,\n            });\n            setTimeout(function () {\n              navigate(0);\n            }, 1000);\n          }\n        });\n      }\n    })\n   \n  };\n\n  const Clickadd = (temp) => {\n    if (temp === 1) {\n      setaddon(true);\n      setOpen(true);\n\n      setheading(\"\");\n      setDetill(\"\");\n    } else if (temp === 2) {\n      setOpen(false);\n      const JsonData = {\n        heading: heading,\n        details: Detill,\n      };\n      instance.post(\"add_info\", JsonData).then((response) => {\n        if (response.data.status === \"ok\") {\n          Swal.fire({\n            title: \"Add Type Room Success\",\n            icon: \"success\",\n            showConfirmButton: false,\n          });\n          setTimeout(function () {\n            navigate(0);\n          }, 1000);\n        }\n      });\n    }\n  };\n\n  const Clickupdate = () => {\n    setOpen(false);\n    const update_room = {\n      id: ID_Info,\n      heading: heading,\n      details: Detill,\n    };\n    instance.put(\"update_info\", update_room).then((response) => {\n      if (response.data.status === \"ok\") {\n        Swal.fire({\n          title: \"Update Type Room Success\",\n          icon: \"success\",\n          showConfirmButton: false,\n        });\n        setTimeout(function () {\n          navigate(0);\n        }, 1000);\n      }\n    });\n  };\n  return (\n    <React.Fragment>\n      <Box\n        sx={{ display: \"flex\", justifyContent: \"flex-end\", p: 2 }}\n        onClick={() => {\n          Clickadd(1);\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"success\"\n          sx={{ borderRadius: 5 }}\n          // onClick={() => handleClick(row.password_room)}\n        >\n          เพิ่มข่าวสาร\n        </Button>\n      </Box>\n\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID_Info</TableCell>\n            <TableCell sx={{ pr: 13 }}>Heading</TableCell>\n            <TableCell>Detill</TableCell>\n            <TableCell>Edit</TableCell>\n            <TableCell>Delete</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {type.map((row) => (\n            <TableRow key={row.id_info}>\n              <TableCell>{row.id_info}</TableCell>\n              <TableCell>{row.heading}</TableCell>\n              <TableCell>{row.details}</TableCell>\n              <TableCell>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  sx={{ borderRadius: 5 }}\n                  onClick={() =>\n                    handleClick(row.id_info, row.heading, row.details)\n                  }\n                >\n                  แก้ไข\n                </Button>\n              </TableCell>\n              <TableCell>\n                <Button\n                  variant=\"contained\"\n                  color=\"error\"\n                  sx={{ borderRadius: 5 }}\n                  endIcon={<DeleteIcon />}\n                  onClick={() => deleteClick(row.id_info)}\n                >\n                  ลบ\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <Modal open={open} onClose={handleClose}>\n        <Box sx={style_}>\n          <TextField\n            id=\"heading\"\n            label=\"heading\"\n            value={heading}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            onChange={(e) => setheading(e.target.value)}\n          />\n\n          <TextField\n            id=\"Detill\"\n            label=\"Detill\"\n            value={Detill}\n            variant=\"outlined\"\n            margin=\"normal\"\n            multiline\n            rows={4}\n            fullWidth\n            required\n            onChange={(e) => setDetill(e.target.value)}\n          />\n         \n          <Box>\n            {!addon && (\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                sx={{ borderRadius: 5, mr: 5 }}\n                onClick={() => {\n                  Clickupdate();\n                }}\n              >\n                แก้ไข\n              </Button>\n            )}\n            {addon && (\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                sx={{ borderRadius: 5, mr: 5 }}\n                onClick={() => {\n                  Clickadd(2);\n                }}\n              >\n                เพิ่มข่าวสาร\n              </Button>\n            )}\n\n            <Button\n              variant=\"contained\"\n              color=\"error\"\n              sx={{ borderRadius: 5 }}\n              onClick={() => setOpen(false)}\n            >\n              ยกเลิก\n            </Button>\n          </Box>\n        </Box>\n      </Modal>\n      <style>{`\n        table {\n          border-collapse: separate;\n          border-spacing: 0;\n          min-width: 800px;\n          width: 100%;\n        }\n        th {\n          background-color: #f5f5f5;\n          border: 1px solid #ddd;\n          font-weight: bold;\n          padding: 10px;\n          text-align: left;\n        }\n        td {\n          border: 1px solid #ddd;\n          padding: 10px;\n        }\n        tr:nth-child(even) td {\n          background-color: #f5f5f5;\n        }\n        tr:hover td {\n          background-color: #fafafa;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { styled, createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MuiDrawer from \"@mui/material/Drawer\";\nimport Box from \"@mui/material/Box\";\nimport MuiAppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport List from \"@mui/material/List\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\nimport {\n  mainListItems,\n  secondaryListItems,\n  loginprofile,\n  adminconsole,\n} from \"./Menubar\";\nimport Userdata from \"./Userdata\";\nimport Roomrdata from \"./Roomdata\";\nimport RoomList from \"./RoomList\";\nimport TypeList from \"./TypeList\";\nimport Employeelist from \"./Employeelist\";\nimport Walkin from \"./Walkin\";\nimport InfoList from \"./InfoList\";\nimport instance from \"../axios.create\";\nimport Swal from \"sweetalert2\";\nimport { useParams } from \"react-router-dom\";\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    boxSizing: \"border-box\",\n    ...(!open && {\n      overflowX: \"hidden\",\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up(\"sm\")]: {\n        width: theme.spacing(9),\n      },\n    }),\n  },\n}));\n\nconst mdTheme = createTheme();\n\nfunction DashboardContent() {\n  const { postId } = useParams();\n  const [open, setOpen] = useState(true);\n  const [auth, setAuth] = useState(true);\n\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  const stepContentMap = {\n    0: <Userdata />,\n    1: <Roomrdata />,\n    2: <RoomList />,\n    3: <TypeList />,\n    4: <Employeelist />,\n    5: <Walkin />,\n    6: <InfoList />,\n\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    instance\n      .post(\n        \"authen\",\n        {},\n        {\n          headers: {\n            Authorization: `Basic ${token}`,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data.status === \"ok\") {\n          setAuth(true);\n        } else {\n          setAuth(false);\n          Swal.fire({\n            title: \"Authen Time Out\",\n            text: \"Please Login agin\",\n            icon: \"warning\",\n            showConfirmButton: false,\n          });\n          setTimeout(function () {\n            window.location = \"/login\";\n          }, 1000);\n        }\n      });\n  }, []);\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: \"flex\" }}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" open={open}>\n          <Toolbar\n            sx={{\n              pr: \"24px\", // keep right padding when drawer closed\n            }}\n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n              sx={{\n                marginRight: \"36px\",\n                ...(open && { display: \"none\" }),\n              }}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              Dashboard\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\" open={open}>\n          <Toolbar\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              px: [1],\n            }}\n          >\n            <IconButton onClick={toggleDrawer}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </Toolbar>\n          <Divider />\n          <List component=\"nav\">\n            {mainListItems}\n            <Divider sx={{ my: 1 }} />\n            {adminconsole}\n            <Divider sx={{ my: 1 }} />\n            {!auth && secondaryListItems}\n            {auth && loginprofile}\n          </List>\n        </Drawer>\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"light\"\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: \"100vh\",\n            overflow: \"auto\",\n          }}\n        >\n          <Toolbar />\n          <React.Fragment>\n            <Container sx={{ mt: 4, mb: 4 }}>\n              <Grid container spacing={3}>\n                {/* Recent Orders */}\n                <Grid item xs={0}>\n                  <Paper sx={{ p: 2}}>\n                    {stepContentMap[postId]}\n                  </Paper>\n                </Grid>\n              </Grid>\n            </Container>\n          </React.Fragment>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\n//Test123456\n\nexport default function Dashboard() {\n  return <DashboardContent />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\nimport Register from \"./components/Register\";\nimport Profile from \"./components/Profile\";\nimport Room from \"./components/Room\";\nimport Roomselect from \"./components/Roomselect\";\nimport Pay1 from \"./components/Pay1\";\nimport Sandbox from \"./components/Sandbox\";\nimport Myroom from \"./components/Myroom\";\nimport Contact from \"./components/Contact\";\nimport Main from \"./dashborad/Dashboard\";\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <React.StrictMode>\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/home\" element={<Home />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/profile\" element={<Profile />} />\n        <Route path=\"/room\" element={<Room />} />\n        <Route path=\"/roomselect\" element={<Roomselect />} />\n        <Route path=\"/pay1\" element={<Pay1 />} />\n        <Route path=\"/sandbox\" element={<Sandbox />} />\n        <Route path=\"/myroom\" element={<Myroom />} />\n        <Route path=\"/contact\" element={<Contact />} />\n        <Route path=\"/dashboard/userdata/:postId\" element={<Main />} />\n        <Route path=\"/dashboard/roomdata/:postId\" element={<Main />} />\n        <Route path=\"/dashboard/roomlist/:postId\" element={<Main />} />\n        <Route path=\"/dashboard/typelist/:postId\" element={<Main />} />\n        <Route path=\"/dashboard/employee/:postId\" element={<Main />} />\n        <Route path=\"/dashboard/info/:postId\" element={<Main />} />\n        <Route path=\"/dashboard/walk_check_in/:postId\" element={<Main />} />\n        <Route\n          path=\"/dashboard/walk_check_in/:postId/:atId\"\n          element={<Main />}\n        />\n      </Routes>\n    </Router>\n  </React.StrictMode>\n);\n","module.exports = __webpack_public_path__ + \"static/media/room1.e893a1ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.196e8d16.png\";","module.exports = __webpack_public_path__ + \"static/media/img5.4ee0ad79.png\";"],"sourceRoot":""}